[
    {
        "id": "f15208d99d43e7d6",
        "type": "tab",
        "label": "wis2node",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5c8aabcb5b253930",
        "type": "tab",
        "label": "MetadataTest",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "23f2408a3192c960",
        "type": "tab",
        "label": "MetadataGen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "da27bfdd1d006652",
        "type": "tab",
        "label": "DataTest",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fcc41b6aa5346b0b",
        "type": "tab",
        "label": "DataGen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0528d79810dd92da",
        "type": "tab",
        "label": "WNMTest",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7a284d91c976432b",
        "type": "tab",
        "label": "WNMGen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "08fa4324bb7d6a58",
        "type": "tab",
        "label": "MetricsTest",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a693308.7ebaf",
        "type": "subflow",
        "name": "flow-timer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "7fc82258.93e36c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 100,
                "wires": [
                    {
                        "id": "7fc82258.93e36c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "name",
                "type": "str",
                "value": "measure",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "Timer Name"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "operation",
                "type": "str",
                "value": "start",
                "ui": {
                    "icon": "font-awesome/fa-cog",
                    "label": {
                        "en-US": "Operation"
                    },
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "start"
                                },
                                "v": "start"
                            },
                            {
                                "l": {
                                    "en-US": "stop"
                                },
                                "v": "stop"
                            },
                            {
                                "l": {
                                    "en-US": "msg.topic"
                                },
                                "v": "msg.topic"
                            },
                            {
                                "l": {
                                    "en-US": "msg.operation"
                                },
                                "v": "msg.operation"
                            },
                            {
                                "l": {
                                    "en-US": "msg.payload"
                                },
                                "v": "msg.payload"
                            }
                        ]
                    }
                }
            }
        ],
        "meta": {
            "module": "node-red-contrib-flow-performance",
            "type": "flow-performance",
            "version": "1.0.1",
            "author": "Steve-Mcl",
            "desc": "Inline flow performance measure node",
            "keywords": "node-red performance",
            "license": "MIT"
        },
        "color": "#DAEAAA",
        "icon": "node-red/timer.svg",
        "status": {
            "x": 280,
            "y": 160,
            "wires": [
                {
                    "id": "7fc82258.93e36c",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "d6751d2bb52095bf",
        "type": "group",
        "z": "08fa4324bb7d6a58",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "abb8e07055ac2d65",
            "6a86f7c541c35c77",
            "2201b7506b5187c0",
            "4f6ce100156594fa",
            "147aefa649605440",
            "6a844cd49d4370d2",
            "7ffad71c2824747c",
            "5a2dea88b70aca39"
        ],
        "x": 534,
        "y": 639,
        "w": 232,
        "h": 382
    },
    {
        "id": "063a3659efcf29f4",
        "type": "group",
        "z": "08fa4324bb7d6a58",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "acbeb00cc14fc5dd",
            "50019b1506f003c4",
            "6fa6fb1c92d31f8d",
            "61a19becbb4da0ef",
            "ec10c30a77f006d6",
            "5ec966041cade0ab",
            "15183c602d1ca2ad",
            "67c73616b01fe250",
            "df94d1608ff65e25"
        ],
        "x": 534,
        "y": 1059,
        "w": 252,
        "h": 422
    },
    {
        "id": "44959fc60800e3f1",
        "type": "redis-config",
        "name": "redis",
        "options": "redis:6379",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "8cf5f6b5.937088",
        "type": "mqtt-broker",
        "name": "Local",
        "broker": "\"\"",
        "port": "",
        "tls": "",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a93c45df39215989",
        "type": "config-log",
        "logname": "log",
        "logdir": "/storage/log",
        "stamp": "utc",
        "logstyle": "json",
        "logrotate": true,
        "logcompress": false,
        "logrotatecount": "10",
        "logsize": "10000"
    },
    {
        "id": "6b724b3e458a437c",
        "type": "mqtt-broker",
        "name": "Scenario",
        "broker": "\"\"",
        "port": "",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "403eb36e86403742",
        "type": "semaphore-plus-config",
        "name": "DataTest"
    },
    {
        "id": "994cdc4109176708",
        "type": "semaphore-plus-config",
        "name": "WNMTest"
    },
    {
        "id": "4f86e34297b0e1f0",
        "type": "semaphore-plus-config",
        "name": "MetadataTest"
    },
    {
        "id": "0e9de28723f237e9",
        "type": "semaphore-plus-config",
        "name": "GSTest"
    },
    {
        "id": "85d82b4006d65d8d",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gb_connected_flag",
        "help": "Connection status from broker to centre",
        "labels": "centre_id,report_by",
        "mtype": "gauge"
    },
    {
        "id": "6c4610bb8eab7dae",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gb_messages_received_total",
        "help": "wmo_wis2_gb_messages_received_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "91862f46380a18bf",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gb_messages_published_total",
        "help": "wmo_wis2_gb_messages_published_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "a25e33f65c381b8c",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gb_messages_no_metadata_total",
        "help": "wmo_wis2_gb_messages_no_metadata_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "8646947da6c80e53",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gb_messages_invalid_topic_total",
        "help": "wmo_wis2_gb_messages_invalid_topic_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "6fb1561193d92df9",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gb_messages_invalid_format_total",
        "help": "wmo_wis2_gb_messages_invalid_format_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "1b20016c7135f032",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gb_last_message_timestamp_seconds",
        "help": "wmo_wis2_gb_last_message_timestamp_seconds",
        "labels": "centre_id,report_by",
        "mtype": "gauge"
    },
    {
        "id": "203ef89ca66b82a2",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_downloaded_total",
        "help": "wmo_wis2_gc_downloaded_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "34adf0271a148eb2",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_downloaded_errors_total",
        "help": "wmo_wis2_gc_downloaded_errors_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "232035f92af35a91",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_dataserver_status_flag",
        "help": "wmo_wis2_gc_dataserver_status_flag",
        "labels": "centre_id,report_by,dataserver",
        "mtype": "gauge"
    },
    {
        "id": "bd27f28bfe4eef0e",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_dataserver_last_download_timestamp_seconds",
        "help": "wmo_wis2_gc_dataserver_last_download_timestamp_seconds",
        "labels": "centre_id,report_by,dataserver",
        "mtype": "gauge"
    },
    {
        "id": "fcad0d9f95e40b12",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_no_cache_total",
        "help": "wmo_wis2_gc_no_cache_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "33a318be978e043b",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_cache_override_total",
        "help": "wmo_wis2_gc_cache_override_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "eff6f062b536a5f9",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_integrity_failed_total",
        "help": "wmo_wis2_gc_integrity_failed_total",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "a9f64b39e68fafe1",
        "type": "prometheus-metric-config",
        "name": "wmo_wis2_gc_last_metadata_timestamp_seconds",
        "help": "wmo_wis2_gc_last_metadata_timestamp_seconds",
        "labels": "centre_id,report_by",
        "mtype": "counter"
    },
    {
        "id": "7fc82258.93e36c",
        "type": "function",
        "z": "9a693308.7ebaf",
        "name": "do operation",
        "func": "// @ts-ignore\nvar name = msg.perfName || env.get(\"name\");\n// @ts-ignore\nvar operation = msg.perfOperation || env.get(\"operation\");\nvar measures = global.get(\"flow_timers\") || {};\nvar measure = measures[name] || {};\n\nfunction doOp(measure, op){\n    if(operation === \"start\"){\n        measure.start = Date.now();//change to process.hrtime\n        measure.stop = null;\n        measure.durationMs = null;\n    } else if(operation === \"stop\") {\n        measure.stop = Date.now();//change to process.hrtime\n        measure.durationMs = measure.start ? measure.stop - measure.start : null;\n        msg._performance = measure;\n    }\n}\n\n\nif(operation === \"start\"){\n    doOp(measure, operation);\n} else if(operation === \"stop\") {\n    doOp(measure, operation);\n    node.send([null, { payload: { text: name + \": \" + measure.durationMs + \"ms\" }}]);\n} else if(operation === \"msg.topic\") {\n    operation = msg.topic;\n    doOp(measure, operation);\n} else if(operation === \"msg.operation\") {\n    operation = msg.operation;\n    doOp(measure, operation);\n} else if(operation === \"msg.payload\") {\n    operation = msg.payload;\n    doOp(measure, operation);\n} else {\n    return [msg, null];\n}\nmeasures[name] = measure;\nglobal.set(\"flow_timers\", measures);\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "02468a0afce5beac",
        "type": "file in",
        "z": "f15208d99d43e7d6",
        "name": "Config",
        "filename": "/storage/configuration/configuration.yml",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 450,
        "y": 140,
        "wires": [
            [
                "070e2db17aa8dfbd"
            ]
        ]
    },
    {
        "id": "070e2db17aa8dfbd",
        "type": "yaml",
        "z": "f15208d99d43e7d6",
        "property": "payload",
        "name": "",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "b9517e333a582acf"
            ]
        ]
    },
    {
        "id": "b9517e333a582acf",
        "type": "change",
        "z": "f15208d99d43e7d6",
        "name": "Configuration",
        "rules": [
            {
                "t": "set",
                "p": "size_min",
                "pt": "global",
                "to": "payload.generator.size_min",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "size_max",
                "pt": "global",
                "to": "payload.generator.size_max",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "skew",
                "pt": "global",
                "to": "payload.generator.skew",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "embed_data",
                "pt": "global",
                "to": "payload.generator.embed_data",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "embed_size_max",
                "pt": "global",
                "to": "payload.generator.embed_size_max",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "weight",
                "pt": "global",
                "to": "$map(payload.generator.data.*.weight, function($v, $i, $a) { $v/$sum($a) })",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "dataset",
                "pt": "global",
                "to": "payload.generator.data.*.$.{   \"discipline\": discipline, \"topic\": sub_topic, \"data_policy\": data_policy  }",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "host",
                "pt": "global",
                "to": "payload.generator.download_host",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "broker",
                "pt": "global",
                "to": "\"mqtts://everyone:everyone@\" & $substringAfter($globalContext(\"host\"),\"//\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "path",
                "pt": "global",
                "to": "payload.generator.download_path",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "configuration_path",
                "pt": "global",
                "to": "payload.generator.configuration_path",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "delay",
                "pt": "global",
                "to": "payload.generator.delay",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "store_duration",
                "pt": "global",
                "to": "payload.generator.store_duration",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "cache_large_files",
                "pt": "global",
                "to": "payload.generator.cache_large_files",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "cache_size_max",
                "pt": "global",
                "to": "payload.generator.cache_size_max",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "running",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "centreidnumber",
                "pt": "global",
                "to": "payload.generator.centre_id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7435f9cd7be87d7c",
        "type": "comment",
        "z": "f15208d99d43e7d6",
        "name": "Load configuration parameters",
        "info": "",
        "x": 270,
        "y": 60,
        "wires": []
    },
    {
        "id": "9f805d7c4e8096e5",
        "type": "cronplus",
        "z": "f15208d99d43e7d6",
        "name": "LoadConfiguration",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Load",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0/5 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 230,
        "y": 140,
        "wires": [
            [
                "02468a0afce5beac"
            ]
        ]
    },
    {
        "id": "2db8981967eb2509",
        "type": "redis-instance",
        "z": "f15208d99d43e7d6",
        "server": "44959fc60800e3f1",
        "name": "",
        "topic": "redis",
        "location": "flow",
        "x": 490,
        "y": 60,
        "wires": []
    },
    {
        "id": "4e3ab537659a43b9",
        "type": "redis-in",
        "z": "f15208d99d43e7d6",
        "server": "44959fc60800e3f1",
        "command": "psubscribe",
        "name": "",
        "topic": "__key*__:*",
        "obj": true,
        "timeout": 0,
        "x": 220,
        "y": 860,
        "wires": [
            [
                "6a25034a65fb9cb4"
            ]
        ]
    },
    {
        "id": "c36d09a51882792b",
        "type": "inject",
        "z": "f15208d99d43e7d6",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[\"set\",\"notify-keyspace-events\",\"KEx\"]",
        "payloadType": "json",
        "x": 270,
        "y": 180,
        "wires": [
            [
                "02468a0afce5beac",
                "00a9c44428849df8"
            ]
        ]
    },
    {
        "id": "7db3095835943be8",
        "type": "redis-command",
        "z": "f15208d99d43e7d6",
        "server": "44959fc60800e3f1",
        "command": "CONFIG",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 480,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6a25034a65fb9cb4",
        "type": "switch",
        "z": "f15208d99d43e7d6",
        "name": "Expired ?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "expired",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 860,
        "wires": [
            [
                "53688ce4ce18138d"
            ]
        ]
    },
    {
        "id": "53688ce4ce18138d",
        "type": "fs-remove",
        "z": "f15208d99d43e7d6",
        "path": "",
        "pathType": "str",
        "filename": "payload",
        "filenameType": "msg",
        "recursive": true,
        "exist": false,
        "name": "",
        "x": 550,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "c676aa397d71b316",
        "type": "comment",
        "z": "f15208d99d43e7d6",
        "name": "Delete expired files",
        "info": "",
        "x": 250,
        "y": 800,
        "wires": []
    },
    {
        "id": "00a9c44428849df8",
        "type": "file in",
        "z": "f15208d99d43e7d6",
        "name": "MQTT",
        "filename": "/storage/configuration/mqtt.yml",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 450,
        "y": 180,
        "wires": [
            [
                "1c6b9e69a9c8fbfd"
            ]
        ]
    },
    {
        "id": "1c6b9e69a9c8fbfd",
        "type": "yaml",
        "z": "f15208d99d43e7d6",
        "property": "payload",
        "name": "",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "841f22d42816f15a",
                "d880499a14eba5e3"
            ]
        ]
    },
    {
        "id": "841f22d42816f15a",
        "type": "change",
        "z": "f15208d99d43e7d6",
        "name": "MQTT Internal",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "connect",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "brokerinternal",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "brokerinternal.force",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "brokerinternal.url",
                "pt": "msg",
                "to": "payload.mqtt.internal.broker",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "brokerinternal.usetls",
                "pt": "msg",
                "to": "$contains(payload.mqtt.internal.broker,/wss/) or $contains(payload.mqtt.internal.broker,/mqtts/)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brokerinternal.verifyservercert",
                "pt": "msg",
                "to": "$exists(payload.mqtt.internal.verifycert) ? payload.mqtt.internal.verifycert : false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brokerinternal.username",
                "pt": "msg",
                "to": "payload.mqtt.internal.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "brokerinternal.password",
                "pt": "msg",
                "to": "payload.mqtt.internal.password",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "brokerinternal.protocolVersion",
                "pt": "msg",
                "to": "$exists(payload.mqtt.internal.version)  ? payload.mqtt.version : 4",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 180,
        "wires": [
            [
                "236f360d51b34941"
            ]
        ]
    },
    {
        "id": "a0f103689fa8e192",
        "type": "mqtt in",
        "z": "f15208d99d43e7d6",
        "name": "Define Publisher",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "8cf5f6b5.937088",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 1040,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "d880499a14eba5e3",
        "type": "change",
        "z": "f15208d99d43e7d6",
        "name": "MQTT Scenario",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "connect",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "brokerscenario",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "brokerscenario.force",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "brokerscenario.url",
                "pt": "msg",
                "to": "payload.mqtt.scenario.broker",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "brokerscenario.usetls",
                "pt": "msg",
                "to": "$contains(payload.mqtt.scenario.broker,/wss/) or $contains(payload.mqtt.scenario.broker,/mqtts/)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brokerscenario.verifyservercert",
                "pt": "msg",
                "to": "$exists(payload.mqtt.scenario.verifycert) ? payload.mqtt.scenario.verifycert : false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brokerscenario.username",
                "pt": "msg",
                "to": "payload.mqtt.scenario.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "brokerscenario.password",
                "pt": "msg",
                "to": "payload.mqtt.scenario.password",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "brokerscenario.protocolVersion",
                "pt": "msg",
                "to": "$exists(payload.mqtt.scenario.version)  ? payload.mqtt.version : 4",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 220,
        "wires": [
            [
                "97b3a79032f8be52",
                "366df8ee916e360c"
            ]
        ]
    },
    {
        "id": "366df8ee916e360c",
        "type": "mqtt in",
        "z": "f15208d99d43e7d6",
        "name": "Define Scenario",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "6b724b3e458a437c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "236f360d51b34941",
        "type": "change",
        "z": "f15208d99d43e7d6",
        "name": "Internal",
        "rules": [
            {
                "t": "set",
                "p": "broker",
                "pt": "msg",
                "to": "brokerinternal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 180,
        "wires": [
            [
                "a0f103689fa8e192"
            ]
        ]
    },
    {
        "id": "97b3a79032f8be52",
        "type": "change",
        "z": "f15208d99d43e7d6",
        "name": "Scenario",
        "rules": [
            {
                "t": "set",
                "p": "broker",
                "pt": "msg",
                "to": "brokerscenario",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 220,
        "wires": [
            [
                "366df8ee916e360c"
            ]
        ]
    },
    {
        "id": "815bde2c61339b1b",
        "type": "mqtt in",
        "z": "f15208d99d43e7d6",
        "name": "Scenario",
        "topic": "config/a/wis2/#",
        "qos": "0",
        "datatype": "json",
        "broker": "6b724b3e458a437c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 560,
        "wires": [
            [
                "16a799f89623cff3",
                "bd43bc015fad0047",
                "5fe59ff13693db19",
                "8516aa1bc2b50a15"
            ]
        ]
    },
    {
        "id": "16a799f89623cff3",
        "type": "switch",
        "z": "f15208d99d43e7d6",
        "name": "Centre ID",
        "property": "payload.configuration.setup.centreid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "centreidnumber",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "accab3f561c00643"
            ]
        ]
    },
    {
        "id": "bd43bc015fad0047",
        "type": "switch",
        "z": "f15208d99d43e7d6",
        "name": "Range",
        "property": " ( $globalContext(\"centreidnumber\") >= payload.configuration.setup.centreid_min and $globalContext(\"centreidnumber\") <= payload.configuration.setup.centreid_max ) ",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "accab3f561c00643"
            ]
        ]
    },
    {
        "id": "44c2a4750726bd35",
        "type": "switch",
        "z": "f15208d99d43e7d6",
        "name": "Scenario",
        "property": "payload.scenario",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "metadatatest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "metadatagen",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "datatest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "datagen",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wnmtest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wnmgen",
                "vt": "str"
            },
            {
                "t": "regex",
                "v": "gbmetrics|gcmetrics|gdcmetrics",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 8,
        "x": 660,
        "y": 560,
        "wires": [
            [
                "0304084e1cbff2da"
            ],
            [
                "e59f4bf5950a6f08"
            ],
            [
                "1a5a6cd662dc99a3"
            ],
            [
                "2cde8a42ad81aacf"
            ],
            [
                "1f44f5ebf047e951"
            ],
            [
                "b1fee82a3f2e01ab"
            ],
            [
                "570cd7fa5134ccb0"
            ],
            []
        ]
    },
    {
        "id": "1f44f5ebf047e951",
        "type": "link out",
        "z": "f15208d99d43e7d6",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "094edc9e79f3ac5e",
            "cddc549d092886bc",
            "31a44fc63ce5696d",
            "0f42fe1560204923"
        ],
        "x": 845,
        "y": 580,
        "wires": []
    },
    {
        "id": "b1fee82a3f2e01ab",
        "type": "link out",
        "z": "f15208d99d43e7d6",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "d7d1313fde813eff",
            "8e3473c56e63770b",
            "3e14349d405d79aa"
        ],
        "x": 845,
        "y": 620,
        "wires": []
    },
    {
        "id": "1a5a6cd662dc99a3",
        "type": "link out",
        "z": "f15208d99d43e7d6",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "685ae48b5683f365",
            "7d21165089f1e0ef"
        ],
        "x": 845,
        "y": 500,
        "wires": []
    },
    {
        "id": "2cde8a42ad81aacf",
        "type": "link out",
        "z": "f15208d99d43e7d6",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "ca5b114a7774870d",
            "b7311151a77e2321"
        ],
        "x": 845,
        "y": 540,
        "wires": []
    },
    {
        "id": "0304084e1cbff2da",
        "type": "link out",
        "z": "f15208d99d43e7d6",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "8ed036c3433022b1"
        ],
        "x": 845,
        "y": 420,
        "wires": []
    },
    {
        "id": "8a1d3e5dda202987",
        "type": "complete",
        "z": "f15208d99d43e7d6",
        "name": "",
        "scope": [
            "7db3095835943be8"
        ],
        "uncaught": false,
        "x": 310,
        "y": 320,
        "wires": [
            [
                "03218137c68497af"
            ]
        ]
    },
    {
        "id": "03218137c68497af",
        "type": "change",
        "z": "f15208d99d43e7d6",
        "name": "Redis Ready",
        "rules": [
            {
                "t": "set",
                "p": "redis_ready",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "accab3f561c00643",
        "type": "switch",
        "z": "f15208d99d43e7d6",
        "name": "Redis ?",
        "property": "redis_ready",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 560,
        "wires": [
            [
                "44c2a4750726bd35"
            ]
        ]
    },
    {
        "id": "d2800750237cad46",
        "type": "inject",
        "z": "f15208d99d43e7d6",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "[\"set\",\"notify-keyspace-events\",\"KEx\"]",
        "payloadType": "json",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "7db3095835943be8"
            ]
        ]
    },
    {
        "id": "e59f4bf5950a6f08",
        "type": "link out",
        "z": "f15208d99d43e7d6",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "b8f06729f9256754"
        ],
        "x": 845,
        "y": 460,
        "wires": []
    },
    {
        "id": "a1c9e3f18cb9d449",
        "type": "comment",
        "z": "f15208d99d43e7d6",
        "name": "Listen to scenario",
        "info": "",
        "x": 250,
        "y": 440,
        "wires": []
    },
    {
        "id": "5fe59ff13693db19",
        "type": "switch",
        "z": "f15208d99d43e7d6",
        "name": "GS",
        "property": "payload.configuration.setup.gs",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "centreidnumber",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "accab3f561c00643"
            ]
        ]
    },
    {
        "id": "8516aa1bc2b50a15",
        "type": "switch",
        "z": "f15208d99d43e7d6",
        "name": "Range",
        "property": " ( $globalContext(\"centreidnumber\") >= payload.configuration.setup.gs_min and $globalContext(\"centreidnumber\") <= payload.configuration.setup.gs_max ) ",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 620,
        "wires": [
            [
                "accab3f561c00643"
            ]
        ]
    },
    {
        "id": "570cd7fa5134ccb0",
        "type": "link out",
        "z": "f15208d99d43e7d6",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "039ae0c14e1d3031"
        ],
        "x": 845,
        "y": 660,
        "wires": []
    },
    {
        "id": "8ed036c3433022b1",
        "type": "link in",
        "z": "5c8aabcb5b253930",
        "name": "link in 18",
        "links": [
            "0304084e1cbff2da"
        ],
        "x": 355,
        "y": 160,
        "wires": [
            [
                "88ba18126e3774d5"
            ]
        ]
    },
    {
        "id": "88ba18126e3774d5",
        "type": "semaphore-plus-take",
        "z": "5c8aabcb5b253930",
        "name": "Take",
        "timeout": 0,
        "config": "4f86e34297b0e1f0",
        "avoidance": "never",
        "threshold": 5,
        "msgPart": "smp_avoidQueue",
        "partType": "msg",
        "x": 450,
        "y": 160,
        "wires": [
            [
                "1134a405552ea123"
            ],
            []
        ]
    },
    {
        "id": "83110ba28c2b38af",
        "type": "semaphore-plus-release",
        "z": "5c8aabcb5b253930",
        "name": "Release",
        "config": "4f86e34297b0e1f0",
        "x": 520,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9489f6e0fb66869a",
        "type": "change",
        "z": "5c8aabcb5b253930",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "$flowContext(\"delay\") * ( $random() + 0.5 )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "009ea63a4ef11126"
            ]
        ]
    },
    {
        "id": "009ea63a4ef11126",
        "type": "trigger",
        "z": "5c8aabcb5b253930",
        "name": "Trigger",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "745f4653868f194e"
            ]
        ]
    },
    {
        "id": "fdba9e74cf16388a",
        "type": "switch",
        "z": "5c8aabcb5b253930",
        "name": "Loop ?",
        "property": "loop",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "number",
                "vt": "flow"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 400,
        "wires": [
            [
                "06cdf24d6d0500ef"
            ],
            [
                "83110ba28c2b38af"
            ]
        ]
    },
    {
        "id": "06cdf24d6d0500ef",
        "type": "change",
        "z": "5c8aabcb5b253930",
        "name": "Loop",
        "rules": [
            {
                "t": "set",
                "p": "loop",
                "pt": "flow",
                "to": "$flowContext(\"loop\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 380,
        "wires": [
            [
                "9489f6e0fb66869a"
            ]
        ]
    },
    {
        "id": "1134a405552ea123",
        "type": "function",
        "z": "5c8aabcb5b253930",
        "name": "Override",
        "func": "let payload = msg.payload;\n\nlet number, loop, delay;\nlet data_id, pubtime, start_datetime, end_datetime, datetime, href, rel, cache_a_wis2,metadata_id;\n\nif ( payload.configuration  && payload.configuration.setup ) {\n   number = payload.configuration.setup.number;\n   delay = payload.configuration.setup.delay;\n   cache_a_wis2 = payload.configuration.setup.cache_a_wis2;\n}\n\nflow.set(\"number\", number || 1);\nflow.set(\"cache_a_wis2\", cache_a_wis2 || \"no\");\nflow.set(\"delay\", delay || global.get(\"delay\") )\nflow.set(\"loop\",1);\n\nif (payload.configuration.wnm) {\n    if ( payload.configuration.wnm.properties ) {\n        data_id = payload.configuration.wnm.properties.data_id;\n        pubtime = payload.configuration.wnm.properties.pubtime;\n        start_datetime = payload.configuration.wnm.properties.start_datetime;\n        end_datetime = payload.configuration.wnm.properties.end_datetime;\n        datetime = payload.configuration.wnm.properties.datetime; \n        metadata_id = payload.configuration.wnm.properties.metadata_id;       \n    }    \n    if ( payload.configuration.wnm.links ) {\n        href = payload.configuration.wnm.links[0].href;\n        rel = payload.configuration.wnm.links[0].rel;\n    }\n}\n \nflow.set(\"data_id\", data_id !== undefined ? data_id : null );\nflow.set(\"metadata_id\", metadata_id !== undefined ? metadata_id : null);\nflow.set(\"pubtime\", pubtime !== undefined ? pubtime : null );\nflow.set(\"start_datetime\", start_datetime !== undefined ? start_datetime : null);\nflow.set(\"end_datetime\", end_datetime !== undefined ? end_datetime : null);\nflow.set(\"datetime\", datetime !== undefined ? datetime : null);\n\nflow.set(\"rel\", rel !== undefined ? rel : null);\nflow.set(\"href\", href != undefined ? href : global.get(\"host\") + \"/unknown\"); \n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "dbfdd24c796ab857",
                "308fab195f39d2ce"
            ]
        ]
    },
    {
        "id": "dbfdd24c796ab857",
        "type": "link out",
        "z": "5c8aabcb5b253930",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "994cca8aababc692"
        ],
        "x": 685,
        "y": 160,
        "wires": []
    },
    {
        "id": "994cca8aababc692",
        "type": "link in",
        "z": "5c8aabcb5b253930",
        "name": "link in 20",
        "links": [
            "dbfdd24c796ab857",
            "745f4653868f194e"
        ],
        "x": 245,
        "y": 260,
        "wires": [
            [
                "fc2f93e122326f2b"
            ]
        ]
    },
    {
        "id": "fc2f93e122326f2b",
        "type": "createrandom",
        "z": "5c8aabcb5b253930",
        "generator": "UUID",
        "type_generator": "generator",
        "label": "UUID",
        "param_1": "v4",
        "type_param_1": "Version",
        "param_2": "",
        "type_param_2": "msg",
        "param_3": "",
        "type_param_3": "msg",
        "f_use_debug": false,
        "x": 330,
        "y": 260,
        "wires": [
            [
                "590451eb189d17b9"
            ]
        ]
    },
    {
        "id": "590451eb189d17b9",
        "type": "change",
        "z": "5c8aabcb5b253930",
        "name": "WNM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \t    \"id\": payload,\t    \"conformsTo\": [\t        \"http://wis.wmo.int/spec/wnm/1/conf/core\"\t    ],\t    \"type\": \"Feature\",\t    \"geometry\": null,\t    \"properties\": {\t            \"pubtime\": $fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z'),\t            \"data_id\": \"wis2/core/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/metadata/\" & payload,\t            \"metadata_id\": \"urn:wmo:md:io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test:observations.\" & $split(payload,\"-\")[4],\t            \"datetime\": null\t    },\t    \"links\": [  {\t            \"href\": \"https://www.example.org/metadata\",\t            \"rel\": \"canonical\"\t    }   ]\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.pubtime",
                "pt": "msg",
                "to": "$flowContext(\"pubtime\") != null ? $flowContext(\"pubtime\") : payload.properties.pubtime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.datetime",
                "pt": "msg",
                "to": "$flowContext(\"datetime\") != null ? $flowContext(\"datetime\") : payload.properties.datetime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.start_datetime",
                "pt": "msg",
                "to": "$flowContext(\"start_datetime\") != null ? $flowContext(\"start_datetime\") : payload.properties.start_datetime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.end_datetime",
                "pt": "msg",
                "to": "$flowContext(\"end_datetime\") != null ? $flowContext(\"end_datetime\") : payload.properties.end_datetime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.data_id",
                "pt": "msg",
                "to": "$flowContext(\"data_id\") != null ? $flowContext(\"data_id\") : payload.properties.data_id",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.metadata_id",
                "pt": "msg",
                "to": "$flowContext(\"metadata_id\") != null ? $flowContext(\"metadata_id\") : payload.properties.metadata_id",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.links[0].href",
                "pt": "msg",
                "to": "$flowContext(\"href\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.links[0].rel",
                "pt": "msg",
                "to": "$flowContext(\"rel\") != null ? $flowContext(\"rel\") : payload.links[0].rel",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties.metadata_id = false ? **.payload ~> |$.properties|{}, ['metadata_id']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$flowContext(\"cache_a_wis2\") = \"only\" ? \"cache/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/metadata\" : \"origin/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/metadata\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "ecba962a10eed8eb",
                "9e5164ecaca81a1c",
                "8b55a9c25d0b1757"
            ]
        ]
    },
    {
        "id": "ecba962a10eed8eb",
        "type": "mqtt out",
        "z": "5c8aabcb5b253930",
        "name": "Pub",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8cf5f6b5.937088",
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "9e5164ecaca81a1c",
        "type": "link out",
        "z": "5c8aabcb5b253930",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "d7c78bbbfdf0a29c"
        ],
        "x": 555,
        "y": 280,
        "wires": []
    },
    {
        "id": "d7c78bbbfdf0a29c",
        "type": "link in",
        "z": "5c8aabcb5b253930",
        "name": "link in 21",
        "links": [
            "9e5164ecaca81a1c"
        ],
        "x": 285,
        "y": 400,
        "wires": [
            [
                "fdba9e74cf16388a"
            ]
        ]
    },
    {
        "id": "745f4653868f194e",
        "type": "link out",
        "z": "5c8aabcb5b253930",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "994cca8aababc692"
        ],
        "x": 835,
        "y": 380,
        "wires": []
    },
    {
        "id": "25391c76ec6b702a",
        "type": "flogger",
        "z": "5c8aabcb5b253930",
        "name": "Publish",
        "logfile": "metadatatest.log",
        "inputchoice": "object",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "a93c45df39215989",
        "sendpane": false,
        "x": 720,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "8b55a9c25d0b1757",
        "type": "change",
        "z": "5c8aabcb5b253930",
        "name": "Log",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 320,
        "wires": [
            [
                "25391c76ec6b702a"
            ]
        ]
    },
    {
        "id": "1622f5c30cb1e5af",
        "type": "catch",
        "z": "5c8aabcb5b253930",
        "name": "",
        "scope": [
            "1134a405552ea123"
        ],
        "uncaught": false,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "83110ba28c2b38af"
            ]
        ]
    },
    {
        "id": "25f031cbe9463b89",
        "type": "mqtt out",
        "z": "5c8aabcb5b253930",
        "name": "Ack",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6b724b3e458a437c",
        "x": 850,
        "y": 100,
        "wires": []
    },
    {
        "id": "308fab195f39d2ce",
        "type": "change",
        "z": "5c8aabcb5b253930",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"result/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/metadatatest\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 100,
        "wires": [
            [
                "25f031cbe9463b89"
            ]
        ]
    },
    {
        "id": "b8f06729f9256754",
        "type": "link in",
        "z": "23f2408a3192c960",
        "name": "link in 22",
        "links": [
            "e59f4bf5950a6f08"
        ],
        "x": 255,
        "y": 300,
        "wires": [
            [
                "15e20c870fc8efd5"
            ]
        ]
    },
    {
        "id": "00cd5fac279f30b0",
        "type": "createrandom",
        "z": "23f2408a3192c960",
        "generator": "UUID",
        "type_generator": "generator",
        "label": "UUID",
        "param_1": "v4",
        "type_param_1": "Version",
        "param_2": "",
        "type_param_2": "msg",
        "param_3": "",
        "type_param_3": "msg",
        "f_use_debug": false,
        "x": 625,
        "y": 460,
        "wires": [
            [
                "33264529245294d0"
            ]
        ],
        "l": false
    },
    {
        "id": "33264529245294d0",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "uuid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 685,
        "y": 460,
        "wires": [
            [
                "2268f10ccf339967"
            ]
        ],
        "l": false
    },
    {
        "id": "15e20c870fc8efd5",
        "type": "function",
        "z": "23f2408a3192c960",
        "name": "Override",
        "func": "let payload = msg.payload;\n\nlet discipline, topic, data_policy;\n\nif ( payload.configuration && payload.configuration.setup && payload.configuration.setup.dataset ) {\n    discipline = payload.configuration.setup.dataset.discipline || \"weather\" \n    topic = payload.configuration.setup.dataset.topic || \"experimental\"\n    data_policy = payload.configuration.setup.dataset.data_policy || \"core\"\n    let dataset = [ { \"discipline\": discipline, \"topic\": topic, \"data_policy\": data_policy } ]\n    global.set(\"dataset\",dataset)\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "c63c6f43b81f18ca",
                "b27fc66b5451f152"
            ]
        ]
    },
    {
        "id": "a1808596c9dcf698",
        "type": "link in",
        "z": "23f2408a3192c960",
        "name": "link in 23",
        "links": [
            "c278431c93790fed",
            "e5f015fa16907d8d",
            "ba52a0ea4530a051"
        ],
        "x": 265,
        "y": 460,
        "wires": [
            [
                "7c6aaec73b8c18e9"
            ]
        ]
    },
    {
        "id": "20df13c730ec09c6",
        "type": "function",
        "z": "23f2408a3192c960",
        "name": "Message",
        "func": "let chunk = flow.get(\"chunk\");\nlet embed_data = global.get(\"embed_data\"); \nlet embed_size_max = global.get(\"embed_size_max\");\nlet host = global.get(\"host\");\nlet path = global.get(\"path\");\nlet filename = flow.get(\"filename\");\n\nmsg.centre_id = \"io-wis2dev-\" + global.get(\"centreidnumber\") + \"-test\";\nmsg.topic = \"origin/a/wis2/\" + msg.centre_id + \"/metadata\";\nmsg.data_id = flow.get(\"data_id\") || \"wis2/\" + msg.centre_id + \"/metadata/\" + msg.filename ;\n\nmsg.payload = { \n    \"id\": flow.get(\"uuid\"),\n    \"conformsTo\": [\n        \"http://wis.wmo.int/spec/wnm/1/conf/core\"\n    ],\n    \"geometry\": null,\n    \"type\": \"Feature\",\n    \"properties\": {\n            \"pubtime\": flow.get(\"pubtime\") || msg.pubtime,\n            \"integrity\": {\n                \"method\": \"sha512\",\n                \"value\": flow.get(\"hash\")\n            },\n            \"data_id\": msg.data_id,\n            \"cache\": true,\n            \"datetime\": null\n    },\n    \"links\": [  {\n            \"href\": host + filename,\n            \"rel\": flow.get(\"rel\") || \"canonical\",\n            \"type\": \"application/json\",\n            \"length\": chunk\n    }   ]\n}\n\nif ( embed_data == true && chunk <= embed_size_max ) {\n    msg.payload.properties.content = { \"encoding\": \"utf-8\", \"value\": flow.get(\"metadata\"), \"size\": chunk }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 560,
        "wires": [
            [
                "02873239422f7a75",
                "3647aac20df01592"
            ]
        ]
    },
    {
        "id": "3647aac20df01592",
        "type": "mqtt out",
        "z": "23f2408a3192c960",
        "name": "Publish",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8cf5f6b5.937088",
        "x": 600,
        "y": 580,
        "wires": []
    },
    {
        "id": "b35d60106f27f631",
        "type": "flogger",
        "z": "23f2408a3192c960",
        "name": "Publish",
        "logfile": "metadatagen.log",
        "inputchoice": "object",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "a93c45df39215989",
        "sendpane": false,
        "x": 720,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "02873239422f7a75",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "Log",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"topic\": topic,\t   \"data_id\": payload.properties.data_id,\t   \"file\": filename,\t   \"length\":  payload.links.length \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "b35d60106f27f631"
            ]
        ]
    },
    {
        "id": "2268f10ccf339967",
        "type": "link out",
        "z": "23f2408a3192c960",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "cc35c409b6befe15"
        ],
        "x": 735,
        "y": 460,
        "wires": []
    },
    {
        "id": "4c60d55c1a33b596",
        "type": "link in",
        "z": "23f2408a3192c960",
        "name": "link in 24",
        "links": [
            "ba52a0ea4530a051"
        ],
        "x": 415,
        "y": 380,
        "wires": [
            [
                "857916c705291d38"
            ]
        ]
    },
    {
        "id": "04c51a6740b77b2d",
        "type": "split",
        "z": "23f2408a3192c960",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 620,
        "y": 300,
        "wires": [
            [
                "2a277f43bc3aaa14"
            ]
        ]
    },
    {
        "id": "2a277f43bc3aaa14",
        "type": "function",
        "z": "23f2408a3192c960",
        "name": "Polygon",
        "func": "let lon1 = Math.round( ( Math.random() - 0.5 ) * 360 );\nlet lon2 = Math.round( ( Math.random() - 0.5 ) * 360 );\nlet lat1 = Math.round( ( Math.random() - 0.5 ) * 180 );\nlet lat2 = Math.round( ( Math.random() - 0.5 ) * 180 );\n\nlet coordinates = [\n    [\n        [Math.min(lon1,lon2), Math.min(lat1,lat2)],\n        [Math.min(lon1,lon2), Math.max(lat1,lat2)],\n        [Math.max(lon1,lon2), Math.max(lat1,lat2)],\n        [Math.max(lon1,lon2), Math.min(lat1,lat2)],\n        [Math.min(lon1,lon2), Math.min(lat1,lat2)]\n    ]\n]\nmsg.coordinates = coordinates\n\nlet min = global.get(\"size_min\");\nlet max = global.get(\"size_max\");\nlet skew = global.get(\"skew\");\nlet buffer = global.get(\"buffer\");\nlet path = global.get(\"path\");\n\nlet chunk;\nlet pos;\n\nchunk = randn_bm(min, max, skew);\npos = Math.round(Math.random() * max) - Math.min(30,chunk); // 30 is for the file name length\n\nmsg.filename = path + buffer.substring(pos, pos+30) + \".json\";\n\nflow.set(\"filename\",msg.filename)\n\nreturn msg;\n\nfunction randn_bm(min, max, skew) {\n  let u = 0, v = 0;\n  while(u === 0) u = Math.random() //Converting [0,1) to (0,1)\n  while(v === 0) v = Math.random()\n  let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v )\n  \n  num = num / 10.0 + 0.5 // Translate to 0 -> 1\n  if (num > 1 || num < 0) \n    num = randn_bm(min, max, skew) // resample between 0 and 1 if out of range\n  \n  else{\n    num = Math.pow(num, skew) // Skew\n    num *= max - min // Stretch to fill range\n    num += min // offset to min\n  }\n  return Math.round(num);\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "5cab1d4a6045592a"
            ]
        ]
    },
    {
        "id": "5cab1d4a6045592a",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "Modify",
        "rules": [
            {
                "t": "set",
                "p": "pubtime",
                "pt": "msg",
                "to": "$fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "metadata.id",
                "pt": "msg",
                "to": "\"urn:wmo:md:io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test:\" & payload.discipline & $replace(payload.topic,\"/\",\":\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "metadata.time.interval",
                "pt": "msg",
                "to": "[ pubtime, \"..\" ]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "metadata.properties.contacts",
                "pt": "msg",
                "to": "[             {                 \"name\": \"Jules-Édouard Moustic\",                 \"organization\": \"Test WIS2 Node\",                 \"phones\": [                     {                         \"value\": \"+3934165551212\"                     }                 ],                 \"emails\": [                     {                         \"value\": \"jem@example.org\"                     }                 ],                 \"addresses\": [                     {                         \"deliveryPoint\": [                             \"123 Presipaute Street\"                         ],                         \"city\": \"Groville\",                         \"administrativeArea\": \"io\",                         \"postalCode\": \"ABC DEF\",                         \"country\": \"Groland\"                     }                 ],                 \"links\": [                     {                         \"rel\": \"about\",                         \"type\": \"text/html\",                         \"href\": \"https://example.org\"                     }                 ],                 \"roles\": [                     \"host\",                     \"producer\"                 ]             }         ]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "metadata.properties.themes[0]",
                "pt": "msg",
                "to": "{\"concepts\":[{\"id\":\"WMO\"},{\"id\":\"Test\"}],\"scheme\":\"https://example.org/vocabulary\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "metadata.properties.themes[1].concepts[0].id",
                "pt": "msg",
                "to": "payload.discipline",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "metadata.properties.themes[1].concepts[0].title",
                "pt": "msg",
                "to": "$uppercase($substring(payload.discipline, 0, 1) ) & $substring(payload.discipline, 1)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "metadata.properties.themes[1].concepts[0].url",
                "pt": "msg",
                "to": "\"https://codes.wmo.int/wis/topic-hierarchy/earth-system-discipline/\" & payload.discipline",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "metadata.properties.themes[1].scheme",
                "pt": "msg",
                "to": "https://codes.wmo.int/wis/topic-hierarchy/earth-system-discipline",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "metadata.properties.created",
                "pt": "msg",
                "to": "pubtime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "metadata.properties[\"wmo:dataPolicy\"]",
                "pt": "msg",
                "to": "payload.data_policy",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "metadata.geometry.type",
                "pt": "msg",
                "to": "Polygon",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "metadata.geometry.coordinates",
                "pt": "msg",
                "to": "coordinates",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "metadata.properties.type",
                "pt": "msg",
                "to": "dataset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "metadata.properties.title",
                "pt": "msg",
                "to": "Test metadata",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "metadata.properties.description",
                "pt": "msg",
                "to": "This is a test but valid metadata",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "metadata.links[0]",
                "pt": "msg",
                "to": "        {             \"rel\": \"about\",             \"href\": \"https://github.com/wmo-im/wis2dev\",             \"type\": \"text/html\",             \"title\": \"Documentation\"         }",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "metadata.links[1]",
                "pt": "msg",
                "to": "{\t   \"rel\":\"items\",\t   \"href\":$globalContext(\"broker\"),\t   \"channel\":\"origin/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/data/\" & payload.data_policy & \"/\" & payload.discipline & \"/\" & payload.topic,\t   \"type\":\"application/geo+json\",\t   \"title\":\"Data notifications\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "metadata.conformsTo",
                "pt": "msg",
                "to": "[         \"http://wis.wmo.int/spec/wcmp/2/conf/core\"     ]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "metadata.type",
                "pt": "msg",
                "to": "Feature",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "metadata",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chunk",
                "pt": "flow",
                "to": "$length($string(payload))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 300,
        "wires": [
            [
                "ba52a0ea4530a051"
            ]
        ]
    },
    {
        "id": "c63c6f43b81f18ca",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "Dataset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataset",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 300,
        "wires": [
            [
                "04c51a6740b77b2d"
            ]
        ]
    },
    {
        "id": "ba52a0ea4530a051",
        "type": "link out",
        "z": "23f2408a3192c960",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "a1808596c9dcf698",
            "4c60d55c1a33b596"
        ],
        "x": 975,
        "y": 300,
        "wires": []
    },
    {
        "id": "857916c705291d38",
        "type": "file",
        "z": "23f2408a3192c960",
        "name": "Save",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 500,
        "y": 380,
        "wires": [
            [
                "c41c70599972de4e"
            ]
        ]
    },
    {
        "id": "c41c70599972de4e",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "K,V",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[filename,pubtime,\"EX\",$globalContext(\"store_duration\")]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "coordinates",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "filename",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "metadata",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 380,
        "wires": [
            [
                "ec3b982ba4a7a945"
            ]
        ]
    },
    {
        "id": "ec3b982ba4a7a945",
        "type": "redis-command",
        "z": "23f2408a3192c960",
        "server": "44959fc60800e3f1",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 750,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cc35c409b6befe15",
        "type": "link in",
        "z": "23f2408a3192c960",
        "name": "link in 26",
        "links": [
            "2268f10ccf339967"
        ],
        "x": 355,
        "y": 560,
        "wires": [
            [
                "20df13c730ec09c6"
            ]
        ]
    },
    {
        "id": "cf5ab4d612037ea0",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "hash",
                "pt": "flow",
                "to": "hash",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 565,
        "y": 460,
        "wires": [
            [
                "00cd5fac279f30b0"
            ]
        ],
        "l": false
    },
    {
        "id": "7c6aaec73b8c18e9",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "String",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$string(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "e97360892f1a1bac"
            ]
        ]
    },
    {
        "id": "c777be87c6a35fd6",
        "type": "mqtt out",
        "z": "23f2408a3192c960",
        "name": "Ack",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6b724b3e458a437c",
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "b27fc66b5451f152",
        "type": "change",
        "z": "23f2408a3192c960",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"result/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/metadatagen\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "c777be87c6a35fd6"
            ]
        ]
    },
    {
        "id": "e97360892f1a1bac",
        "type": "function",
        "z": "23f2408a3192c960",
        "name": "Hash",
        "func": "msg.hash = crypto.createHash(\"sha512\").update(msg.payload).digest(\"base64\"); \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 470,
        "y": 460,
        "wires": [
            [
                "cf5ab4d612037ea0"
            ]
        ]
    },
    {
        "id": "0d890d8ab7853715",
        "type": "function",
        "z": "da27bfdd1d006652",
        "name": "Init",
        "func": "let min = flow.get(\"size_min\");\nlet max = flow.get(\"size_max\");\nlet skew = flow.get(\"skew\");\nlet cache_a_wis2 = flow.get(\"cache_a_wis2\");\nlet topic = flow.get(\"topic\");\nlet weight = global.get(\"weight\");\nlet data = global.get(\"dataset\");\nlet path = global.get(\"path\");\nlet chunk;\nlet pos;\nlet obj;\nlet datatype;\nlet random;\nlet arr = [];\n\nmsg = {};\nmsg.centre_id = \"io-wis2dev-\" + global.get(\"centreidnumber\") + \"-test\";\n\nchunk = randn_bm(min, max, skew);\n\npos = Math.round(Math.random() * max) - Math.min(30,chunk); // 30 is for the file name length\n\nmsg.payload = Buffer.alloc(chunk, makeid(30)).toString('utf-8');\nmsg.hash = crypto.createHash(\"sha512\").update(msg.payload).digest(\"base64\");\n\nmsg.filename = path + makeid(30) + \".txt\"\n\nif ( typeof weight == \"number\" ) datatype = data;\nelse { \n  obj = Object.assign({}, weight)\n  datatype = data[weightedRandom(obj)]; \n}\n\nmsg.content = \"\";\nmsg.discipline = datatype.discipline;\nmsg.data_policy = datatype.data_policy;\nmsg.chunk = chunk;\n\nif ( topic == null ) {\n    msg.topic = \"origin/a/wis2/\" + msg.centre_id + \"/data/\" + msg.data_policy + \"/\" + msg.discipline + \"/\" + datatype.topic;\n} \nelse {\n    msg.topic = \"origin/a/wis2/\" + msg.centre_id + topic;\n}\n\n\nif ( cache_a_wis2 == \"mix\" ) {\n    random = Math.random();\n    if ( random <= 0.5 ) { \n      msg.topic = msg.topic.replace(/origin/,\"cache\") ;\n    }\n}\nif ( cache_a_wis2 == \"only\" ) {\n      msg.topic = msg.topic.replace(/origin/, \"cache\");\n}\n\nmsg.data_id = flow.get(\"data_id\") || msg.topic +  msg.filename ;\n\nreturn msg;\n\nfunction randn_bm(min, max, skew) {\n  let u = 0, v = 0;\n  while(u === 0) u = Math.random() //Converting [0,1) to (0,1)\n  while(v === 0) v = Math.random()\n  let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v )\n  \n  num = num / 10.0 + 0.5 // Translate to 0 -> 1\n  if (num > 1 || num < 0) \n    num = randn_bm(min, max, skew) // resample between 0 and 1 if out of range\n  \n  else{\n    num = Math.pow(num, skew) // Skew\n    num *= max - min // Stretch to fill range\n    num += min // offset to min\n  }\n  return Math.round(num);\n}\n\nfunction weightedRandom(obj) {\n  let i, sum=0, r=Math.random();\n  for (i in obj) {\n    sum += obj[i];\n    if (r <= sum) { return i }\n  }\n}\n\n\nfunction makeid(length) {\n   var result           = '';\n   var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 550,
        "y": 240,
        "wires": [
            [
                "53a9e03fc6e13221"
            ]
        ]
    },
    {
        "id": "385803d26b4f71e9",
        "type": "link out",
        "z": "da27bfdd1d006652",
        "name": "",
        "mode": "link",
        "links": [
            "05da7d629923d597",
            "4f25f340a952cf06",
            "747652483c36030c"
        ],
        "x": 595,
        "y": 480,
        "wires": []
    },
    {
        "id": "05da7d629923d597",
        "type": "link in",
        "z": "da27bfdd1d006652",
        "name": "",
        "links": [
            "385803d26b4f71e9"
        ],
        "x": 265,
        "y": 580,
        "wires": [
            [
                "872852253a7bf9e7"
            ]
        ]
    },
    {
        "id": "88a86cd939610e30",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "$flowContext(\"delay\") * ( $random() + 0.5 )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "fdf555e62099fbd0"
            ]
        ]
    },
    {
        "id": "fdf555e62099fbd0",
        "type": "trigger",
        "z": "da27bfdd1d006652",
        "name": "Trigger",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 730,
        "y": 560,
        "wires": [
            [
                "19f21a46b18a3e6a"
            ]
        ]
    },
    {
        "id": "0d6d8a409a25bee1",
        "type": "function",
        "z": "da27bfdd1d006652",
        "name": "Message",
        "func": "let chunk = msg.chunk;\nlet embed_data = global.get(\"embed_data\"); \nlet embed_size_max = global.get(\"embed_size_max\");\nlet cache_large_files = global.get(\"cache_large_files\");\nlet cache_size_max = global.get(\"cache_size_max\");\nlet host = global.get(\"host\");\nlet path = global.get(\"path\");\nlet integrity_value = msg.hash;\nlet content_value = msg.payload;\n\nlet random;\n\nlet lon1 = ( Math.random() - 0.5 ) * 360 ;\nlet lon2 = ( Math.random() - 0.5 ) * 360 ;\nlet lat1 = ( Math.random() - 0.5 ) * 180 ;\nlet lat2 = ( Math.random() - 0.5 ) * 180 ;\n\nmsg.payload = { \n    \"id\": flow.get(\"uuid\"),\n    \"conformsTo\": [\n        \"http://wis.wmo.int/spec/wnm/1/conf/core\"\n    ],\n    \"type\": \"Feature\",\n    \"properties\": {\n            \"pubtime\": flow.get(\"pubtime\") || msg.pubtime,\n            \"integrity\": {\n                \"method\": \"sha512\"\n            },\n            \"data_id\": msg.data_id\n    },\n    \"links\": [  {\n            \"href\": host + msg.filename,\n            \"rel\": flow.get(\"rel\") || \"canonical\",\n            \"type\": \"application/txt\",\n            \"length\": chunk\n    }   ]\n}\n\nif ( cache_large_files == false && chunk >= cache_size_max ) {\n     msg.payload.properties.cache = false ;\n}\n\nif (integrity_value != false) msg.payload.properties.integrity.value = integrity_value;\n\nif (flow.get(\"datetime\") !== null ) msg.payload.properties.datetime = flow.get(\"datetime\");\nelse {\n    random = Math.random();\n    if ( random <= 0.5 ) { \n        msg.payload.properties.datetime = msg.datetime;\n    }\n    else {\n        msg.payload.properties.start_datetime = msg.start_datetime;\n        msg.payload.properties.end_datetime = msg.end_datetime;\n    }\n}\n\nif (flow.get(\"ttaaii\") !== null) msg.payload.properties.gts= {\n    \"ttaaii\": flow.get(\"ttaaii\"),\n    \"cccc\": flow.get(\"cccc\")\n}\n\nif ( flow.get(\"cache\") !== null ) msg.payload.properties.cache = flow.get(\"cache\") ;\n\nif ( flow.get(\"length\") == false ) msg.payload.links[0].length = chunk + 1 ;\n\nif ( flow.get(\"href\") == false ) { msg.payload.links[0].href = host + \"/fail\" + msg.filename; }\nelse { \n    if ( typeof flow.get(\"href\") === \"string\" ) {\n        msg.payload.links[0].href = flow.get(\"href\")\n        delete msg.payload.links[0].length;\n        delete msg.payload.links[0].type;\n        delete msg.payload.properties.integrity;\n        delete msg.payload.properties.end_datetime;\n        delete msg.payload.properties.start_datetime;\n        msg.payload.properties.datetime = null;\n    }\n}\n\nif (embed_data == true && chunk <= embed_size_max) {\n    msg.payload.properties.content = { \"encoding\": \"utf-8\", \"value\": content_value, \"size\": chunk }\n    if (flow.get(\"size\") == false) msg.payload.properties.content.size = chunk - 1;\n}\n\nrandom = Math.random();\n\nif ( random <= 0.33 ) { \n    msg.payload.geometry = null\n}\nelse if ( random <= 0.66 ) {\n    msg.payload.geometry = { \n              \"type\": \"Point\",\n              \"coordinates\": [\n                  lon1,\n                  lat1\n              ]\n    }\n}\nelse {\n    msg.payload.geometry = { \n              \"type\": \"Polygon\",\n              \"coordinates\" : [\n                  [\n                      [Math.min(lon1,lon2), Math.min(lat1,lat2)],\n                      [Math.min(lon1,lon2), Math.max(lat1,lat2)],\n                      [Math.max(lon1,lon2), Math.max(lat1,lat2)],\n                      [Math.max(lon1,lon2), Math.min(lat1,lat2)],\n                      [Math.min(lon1,lon2), Math.min(lat1,lat2)]\n                  ]\n              ]\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 400,
        "wires": [
            [
                "385803d26b4f71e9",
                "0ee3c679755e77b2",
                "80382be560d62a6c"
            ]
        ]
    },
    {
        "id": "853bc4a4259e38f8",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "Date/Time",
        "rules": [
            {
                "t": "set",
                "p": "pubtime",
                "pt": "msg",
                "to": "$fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "datetime",
                "pt": "msg",
                "to": "$fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]Z')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "start_datetime",
                "pt": "msg",
                "to": "$fromMillis($millis() + $floor(6*$random())*3600*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]Z')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "end_datetime",
                "pt": "msg",
                "to": "$fromMillis($millis() + $floor(12*$random())*3600*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]Z')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 240,
        "wires": [
            [
                "1bd8ddf3a36040bb"
            ]
        ]
    },
    {
        "id": "62ec379499ef2c6f",
        "type": "file",
        "z": "da27bfdd1d006652",
        "name": "Save",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 340,
        "y": 400,
        "wires": [
            [
                "0d6d8a409a25bee1",
                "ce9decefd7cf7841"
            ]
        ]
    },
    {
        "id": "80382be560d62a6c",
        "type": "mqtt out",
        "z": "da27bfdd1d006652",
        "name": "Publish",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8cf5f6b5.937088",
        "x": 640,
        "y": 420,
        "wires": []
    },
    {
        "id": "ce9decefd7cf7841",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "K,V",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[filename,pubtime,\"EX\",$globalContext(\"store_duration\")]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 340,
        "wires": [
            [
                "1ca495d97cf3c78f"
            ]
        ]
    },
    {
        "id": "1ca495d97cf3c78f",
        "type": "redis-command",
        "z": "da27bfdd1d006652",
        "server": "44959fc60800e3f1",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 590,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "35de07527d283ea0",
        "type": "createrandom",
        "z": "da27bfdd1d006652",
        "generator": "UUID",
        "type_generator": "generator",
        "label": "UUID",
        "param_1": "v4",
        "type_param_1": "Version",
        "param_2": "",
        "type_param_2": "msg",
        "param_3": "",
        "type_param_3": "msg",
        "f_use_debug": false,
        "x": 395,
        "y": 240,
        "wires": [
            [
                "b94085fe13d3366c"
            ]
        ],
        "l": false
    },
    {
        "id": "b94085fe13d3366c",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "uuid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 455,
        "y": 240,
        "wires": [
            [
                "0d890d8ab7853715"
            ]
        ],
        "l": false
    },
    {
        "id": "5ae064fd89e9996f",
        "type": "flogger",
        "z": "da27bfdd1d006652",
        "name": "Publish",
        "logfile": "test.log",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "a93c45df39215989",
        "sendpane": false,
        "x": 760,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "0ee3c679755e77b2",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "Log",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"topic\": topic,\t   \"data_id\": payload.properties.data_id,\t   \"file\": filename,\t   \"length\":  payload.links.length \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "5ae064fd89e9996f"
            ]
        ]
    },
    {
        "id": "685ae48b5683f365",
        "type": "link in",
        "z": "da27bfdd1d006652",
        "name": "Scenario 1",
        "links": [
            "1a5a6cd662dc99a3",
            "16f047ff444e7daf"
        ],
        "x": 265,
        "y": 140,
        "wires": [
            [
                "67f3fcf33f8bc19c"
            ]
        ]
    },
    {
        "id": "e926030de3468aef",
        "type": "function",
        "z": "da27bfdd1d006652",
        "name": "Override",
        "func": "let payload = msg.payload;\n\nlet min, max, skew, number, loop, delay, cache_a_wis2,integrity, topic;\nlet data_id, pubtime, datetime, cache, rel, length, href, method, value, size;\nlet ttaaii, cccc;\n\nif ( payload.configuration  && payload.configuration.setup ) {\n   max = Math.min(payload.configuration.setup.size_max, 500000000);\n   min = Math.min(payload.configuration.setup.size_min, max);\n   skew = payload.configuration.setup.skew;\n   number = payload.configuration.setup.number;\n   delay = payload.configuration.setup.delay;\n   cache_a_wis2 = payload.configuration.setup.cache_a_wis2;\n   topic = payload.configuration.setup.topic;\n}\n\nflow.set(\"size_min\", Math.floor(min) || global.get(\"size_min\") );\nflow.set(\"size_max\", Math.floor(max) || global.get(\"size_max\") );\nflow.set(\"skew\", Math.floor(skew) || global.get(\"skew\") );\nflow.set(\"number\", Math.floor(number) || 1);\nflow.set(\"delay\", Math.floor(delay) || global.get(\"delay\") )\nflow.set(\"cache_a_wis2\", cache_a_wis2 || global.get(\"cache_a_wis2\") )\nflow.set(\"topic\", topic !== undefined ? topic : null)\n\nflow.set(\"loop\",1);\n\nif ( payload.configuration.wnm ) {\n    if ( payload.configuration.wnm.properties ) {\n        data_id = payload.configuration.wnm.properties.data_id;\n        pubtime = payload.configuration.wnm.properties.pubtime;\n        datetime = payload.configuration.wnm.properties.datetime;\n        cache = payload.configuration.wnm.properties.cache;\n        if (payload.configuration.wnm.properties.integrity) {\n            method = payload.configuration.wnm.properties.integrity.method;\n            value = payload.configuration.wnm.properties.integrity.value;\n        }\n        if (payload.configuration.wnm.properties.content) {\n            size = payload.configuration.wnm.properties.content.size;                   \n        }  \n        if (payload.configuration.wnm.properties.gts) {\n            ttaaii = payload.configuration.wnm.properties.gts.ttaaii;\n            cccc = payload.configuration.wnm.properties.gts.cccc;\n        }      \n    }    \n\n    if ( payload.configuration.wnm.links ) {\n       href = payload.configuration.wnm.links[0].href;\n       rel = payload.configuration.wnm.links[0].rel;\n       length = payload.configuration.wnm.links[0].length;\n    }\n}\n\n\nflow.set(\"data_id\", data_id !== undefined ? data_id : null );\nflow.set(\"pubtime\", pubtime !== undefined ? pubtime : null );\nflow.set(\"datetime\", datetime !== undefined ? datetime : null);\nflow.set(\"cache\", cache !== undefined ? cache : null );\nflow.set(\"size\", size !== undefined ? size : null);\n\nflow.set(\"rel\", rel !== undefined ? rel : null );\nflow.set(\"length\", length !== undefined ? length : true);\nflow.set(\"href\", href !== undefined ? href : true);\n\nflow.set(\"method\", method !== undefined ? method : null);\nflow.set(\"value\", value !== undefined ? value : null);\n\nflow.set(\"ttaaii\", ttaaii !== undefined ? ttaaii : null);\nflow.set(\"cccc\", cccc !== undefined ? cccc : null);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 140,
        "wires": [
            [
                "14b27303351298f1",
                "d132355442c718a3"
            ]
        ]
    },
    {
        "id": "872852253a7bf9e7",
        "type": "switch",
        "z": "da27bfdd1d006652",
        "name": "Loop ?",
        "property": "loop",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "number",
                "vt": "flow"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 580,
        "wires": [
            [
                "cfa04bc46378c4aa"
            ],
            [
                "278b9adc116f286c"
            ]
        ]
    },
    {
        "id": "cfa04bc46378c4aa",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "Loop",
        "rules": [
            {
                "t": "set",
                "p": "loop",
                "pt": "flow",
                "to": "$flowContext(\"loop\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 560,
        "wires": [
            [
                "88a86cd939610e30"
            ]
        ]
    },
    {
        "id": "67f3fcf33f8bc19c",
        "type": "semaphore-plus-take",
        "z": "da27bfdd1d006652",
        "name": "Take",
        "timeout": 0,
        "config": "403eb36e86403742",
        "avoidance": "never",
        "threshold": "1",
        "msgPart": "smp_avoidQueue",
        "partType": "msg",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "e926030de3468aef"
            ],
            []
        ]
    },
    {
        "id": "278b9adc116f286c",
        "type": "semaphore-plus-release",
        "z": "da27bfdd1d006652",
        "name": "Release",
        "config": "403eb36e86403742",
        "x": 540,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "53a9e03fc6e13221",
        "type": "switch",
        "z": "da27bfdd1d006652",
        "name": "",
        "property": "value",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 240,
        "wires": [
            [
                "853bc4a4259e38f8"
            ],
            [
                "603b58b6e66ca626"
            ]
        ]
    },
    {
        "id": "603b58b6e66ca626",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "Hash",
        "rules": [
            {
                "t": "set",
                "p": "hash",
                "pt": "msg",
                "to": "value",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 280,
        "wires": [
            [
                "853bc4a4259e38f8"
            ]
        ]
    },
    {
        "id": "19f21a46b18a3e6a",
        "type": "link out",
        "z": "da27bfdd1d006652",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "dca816ac0d92233b"
        ],
        "x": 825,
        "y": 560,
        "wires": []
    },
    {
        "id": "dca816ac0d92233b",
        "type": "link in",
        "z": "da27bfdd1d006652",
        "name": "link in 6",
        "links": [
            "19f21a46b18a3e6a",
            "14b27303351298f1",
            "a32dcda5d9b7c09f",
            "8f603e201f903143"
        ],
        "x": 335,
        "y": 240,
        "wires": [
            [
                "35de07527d283ea0"
            ]
        ]
    },
    {
        "id": "14b27303351298f1",
        "type": "link out",
        "z": "da27bfdd1d006652",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "dca816ac0d92233b"
        ],
        "x": 615,
        "y": 140,
        "wires": []
    },
    {
        "id": "3937a562aece5710",
        "type": "link in",
        "z": "da27bfdd1d006652",
        "name": "link in 7",
        "links": [
            "1bd8ddf3a36040bb"
        ],
        "x": 255,
        "y": 400,
        "wires": [
            [
                "62ec379499ef2c6f"
            ]
        ]
    },
    {
        "id": "1bd8ddf3a36040bb",
        "type": "link out",
        "z": "da27bfdd1d006652",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "3937a562aece5710"
        ],
        "x": 1035,
        "y": 240,
        "wires": []
    },
    {
        "id": "b1e6cc6827329b0a",
        "type": "catch",
        "z": "da27bfdd1d006652",
        "name": "",
        "scope": [
            "e926030de3468aef"
        ],
        "uncaught": false,
        "x": 350,
        "y": 660,
        "wires": [
            [
                "278b9adc116f286c"
            ]
        ]
    },
    {
        "id": "4f306b3e167d64fb",
        "type": "mqtt out",
        "z": "da27bfdd1d006652",
        "name": "Ack",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6b724b3e458a437c",
        "x": 770,
        "y": 100,
        "wires": []
    },
    {
        "id": "d132355442c718a3",
        "type": "change",
        "z": "da27bfdd1d006652",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"result/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/datatest\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "4f306b3e167d64fb"
            ]
        ]
    },
    {
        "id": "242b90601bbb3920",
        "type": "function",
        "z": "fcc41b6aa5346b0b",
        "name": "Init",
        "func": "let min = flow.get(\"size_min\");\nlet max = flow.get(\"size_max\");\nlet skew = flow.get(\"skew\");\nlet topic = flow.get(\"topic\");\n\nlet weight = global.get(\"weight\");\nlet data = global.get(\"dataset\");\nlet path = global.get(\"path\");\nlet chunk;\nlet pos;\nlet obj;\nlet datatype;\nlet random;\n\nmsg = {};\nmsg.centre_id = \"io-wis2dev-\" + global.get(\"centreidnumber\") + \"-test\";\n\nchunk = randn_bm(min, max, skew);\npos = Math.round(Math.random() * max) - Math.min(30,chunk); // 30 is for the file name length\n\nmsg.payload = Buffer.alloc(chunk, makeid(30)).toString('utf-8');\nmsg.hash = crypto.createHash(\"sha512\").update(msg.payload).digest(\"base64\"); \n\nmsg.filename = path + makeid(30) + \".txt\"\n\nif ( typeof weight == \"number\" ) datatype = data;\nelse { \n  obj = Object.assign({}, weight)\n  datatype = data[weightedRandom(obj)]; \n}\n\nmsg.content = \"\";\nmsg.discipline = datatype.discipline;\nmsg.data_policy = datatype.data_policy;\nmsg.chunk = chunk;\n\nif (topic == null) {\n  msg.topic = \"origin/a/wis2/\" + msg.centre_id + \"/data/\" + msg.data_policy + \"/\" + msg.discipline + \"/\" + datatype.topic;\n}\nelse {\n  msg.topic = \"origin/a/wis2/\" + msg.centre_id + topic;\n}\n\nmsg.data_id = flow.get(\"data_id\") || msg.topic +  msg.filename ;\n\nreturn msg;\n\nfunction randn_bm(min, max, skew) {\n  let u = 0, v = 0;\n  while(u === 0) u = Math.random() //Converting [0,1) to (0,1)\n  while(v === 0) v = Math.random()\n  let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v )\n  \n  num = num / 10.0 + 0.5 // Translate to 0 -> 1\n  if (num > 1 || num < 0) \n    num = randn_bm(min, max, skew) // resample between 0 and 1 if out of range\n  \n  else{\n    num = Math.pow(num, skew) // Skew\n    num *= max - min // Stretch to fill range\n    num += min // offset to min\n  }\n  return Math.round(num);\n}\n\nfunction weightedRandom(obj) {\n  let i, sum=0, r=Math.random();\n  for (i in obj) {\n    sum += obj[i];\n    if (r <= sum) { return i }\n  }\n}\n\nfunction makeid(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 580,
        "y": 300,
        "wires": [
            [
                "e066b6a61c74bcd7"
            ]
        ]
    },
    {
        "id": "b0a5be8644a9eef1",
        "type": "link in",
        "z": "fcc41b6aa5346b0b",
        "name": "",
        "links": [
            "64497ada297a8048",
            "e5ff4991733fe60d",
            "2e99d6b744e52bb2"
        ],
        "x": 365,
        "y": 580,
        "wires": [
            [
                "9794c1b557acb8b8"
            ]
        ]
    },
    {
        "id": "e066b6a61c74bcd7",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Date/Time",
        "rules": [
            {
                "t": "set",
                "p": "pubtime",
                "pt": "msg",
                "to": "$fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "datetime",
                "pt": "msg",
                "to": "$fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]Z')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "start_datetime",
                "pt": "msg",
                "to": "$fromMillis($millis() + $floor(6*$random())*3600*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]Z')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "end_datetime",
                "pt": "msg",
                "to": "$fromMillis($millis() + $floor(12*$random())*3600*1000,'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]Z')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 300,
        "wires": [
            [
                "9985ab93515b2e2d"
            ]
        ]
    },
    {
        "id": "ba6ceae7ce416296",
        "type": "createrandom",
        "z": "fcc41b6aa5346b0b",
        "generator": "UUID",
        "type_generator": "generator",
        "label": "UUID",
        "param_1": "v4",
        "type_param_1": "Version",
        "param_2": "",
        "type_param_2": "msg",
        "param_3": "",
        "type_param_3": "msg",
        "f_use_debug": false,
        "x": 425,
        "y": 300,
        "wires": [
            [
                "7516490f329bc61c"
            ]
        ],
        "l": false
    },
    {
        "id": "7516490f329bc61c",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "uuid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 485,
        "y": 300,
        "wires": [
            [
                "242b90601bbb3920"
            ]
        ],
        "l": false
    },
    {
        "id": "0daa3e39533f4653",
        "type": "function",
        "z": "fcc41b6aa5346b0b",
        "name": "Override",
        "func": "let payload = msg.payload;\n\nlet min, max, skew, delay, action, timeout, topic;\n\nif ( payload.configuration  && payload.configuration.setup ) {\n   max = payload.configuration.setup.size_max;\n   min = payload.configuration.setup.size_min;\n   skew = payload.configuration.setup.skew;\n   delay = payload.configuration.setup.delay;\n   action = payload.configuration.setup.action;\n   timeout = payload.configuration.setup.timeout;\n   topic = payload.configuration.setup.topic;\n}\n\nflow.set(\"size_min\", min || global.get(\"size_min\") );\nflow.set(\"size_max\",max || global.get(\"size_max\") );\nflow.set(\"skew\",skew || global.get(\"skew\") );\nflow.set(\"delay\", delay || global.get(\"delay\") );\nflow.set(\"action\", action || \"stop\");\nflow.set(\"timeout\", timeout || 0);\nflow.set(\"topic\", topic !== undefined ? topic : null)\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "76eb877468896403",
                "6b41b82936cd3a2b"
            ]
        ]
    },
    {
        "id": "9794c1b557acb8b8",
        "type": "switch",
        "z": "fcc41b6aa5346b0b",
        "name": "Action ?",
        "property": "action",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 580,
        "wires": [
            [
                "0d1660bc57e4d64d"
            ],
            []
        ]
    },
    {
        "id": "b7311151a77e2321",
        "type": "link in",
        "z": "fcc41b6aa5346b0b",
        "name": "link in 5",
        "links": [
            "2cde8a42ad81aacf"
        ],
        "x": 255,
        "y": 180,
        "wires": [
            [
                "0daa3e39533f4653"
            ]
        ]
    },
    {
        "id": "76eb877468896403",
        "type": "switch",
        "z": "fcc41b6aa5346b0b",
        "name": "Action ?",
        "property": "action",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "525f3246c5511dcd"
            ],
            [
                "2d98292388a0388c"
            ]
        ]
    },
    {
        "id": "525f3246c5511dcd",
        "type": "switch",
        "z": "fcc41b6aa5346b0b",
        "name": "Status ?",
        "property": "status",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 640,
        "y": 160,
        "wires": [
            [
                "398676317bca8740"
            ],
            [
                "398676317bca8740"
            ]
        ]
    },
    {
        "id": "398676317bca8740",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Start",
        "rules": [
            {
                "t": "set",
                "p": "status",
                "pt": "global",
                "to": "start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 160,
        "wires": [
            [
                "a31edaced2e6d77a",
                "f7427101eaecb8ea"
            ]
        ]
    },
    {
        "id": "0d1660bc57e4d64d",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "$flowContext(\"delay\") * ( $random() + 0.5 )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 580,
        "wires": [
            [
                "686ad42eb34edac7"
            ]
        ]
    },
    {
        "id": "686ad42eb34edac7",
        "type": "trigger",
        "z": "fcc41b6aa5346b0b",
        "name": "Trigger",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 710,
        "y": 580,
        "wires": [
            [
                "5ff1a7e393844993"
            ]
        ]
    },
    {
        "id": "2d98292388a0388c",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Stop",
        "rules": [
            {
                "t": "set",
                "p": "status",
                "pt": "global",
                "to": "stop",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "e5ff4991733fe60d"
            ]
        ]
    },
    {
        "id": "e5ff4991733fe60d",
        "type": "link out",
        "z": "fcc41b6aa5346b0b",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "b0a5be8644a9eef1"
        ],
        "x": 715,
        "y": 200,
        "wires": []
    },
    {
        "id": "a31edaced2e6d77a",
        "type": "link out",
        "z": "fcc41b6aa5346b0b",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "bd0ec46404c46950"
        ],
        "x": 875,
        "y": 160,
        "wires": []
    },
    {
        "id": "bd0ec46404c46950",
        "type": "link in",
        "z": "fcc41b6aa5346b0b",
        "name": "link in 8",
        "links": [
            "5ff1a7e393844993",
            "a31edaced2e6d77a"
        ],
        "x": 375,
        "y": 300,
        "wires": [
            [
                "ba6ceae7ce416296"
            ]
        ]
    },
    {
        "id": "5ff1a7e393844993",
        "type": "link out",
        "z": "fcc41b6aa5346b0b",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "bd0ec46404c46950"
        ],
        "x": 795,
        "y": 580,
        "wires": []
    },
    {
        "id": "64497ada297a8048",
        "type": "link out",
        "z": "fcc41b6aa5346b0b",
        "name": "",
        "mode": "link",
        "links": [
            "b0a5be8644a9eef1"
        ],
        "x": 635,
        "y": 500,
        "wires": []
    },
    {
        "id": "40c8b042eac18329",
        "type": "function",
        "z": "fcc41b6aa5346b0b",
        "name": "Message",
        "func": "let chunk = msg.chunk;\nlet embed_data = global.get(\"embed_data\"); \nlet embed_size_max = global.get(\"embed_size_max\");\nlet cache_large_files = global.get(\"cache_large_files\");\nlet cache_size_max = global.get(\"cache_size_max\");\nlet host = global.get(\"host\");\nlet path = global.get(\"path\");\nlet value = msg.payload;\n\nlet random;\n\nlet lon1 = ( Math.random() - 0.5 ) * 360 ;\nlet lon2 = ( Math.random() - 0.5 ) * 360 ;\nlet lat1 = ( Math.random() - 0.5 ) * 180 ;\nlet lat2 = ( Math.random() - 0.5 ) * 180 ;\n\nmsg.payload = { \n    \"id\": flow.get(\"uuid\"),\n    \"conformsTo\": [\n        \"http://wis.wmo.int/spec/wnm/1/conf/core\"\n    ],\n    \"type\": \"Feature\",\n    \"properties\": {\n            \"pubtime\": flow.get(\"pubtime\") || msg.pubtime,\n            \"integrity\": {\n                \"method\": \"sha512\",\n                \"value\": msg.hash\n            },\n            \"data_id\": msg.data_id\n    },\n    \"links\": [  {\n            \"href\": host + msg.filename,\n            \"rel\": flow.get(\"rel\") || \"canonical\",\n            \"type\": \"application/txt\",\n            \"length\": chunk\n    }   ]\n}\n\nif ( cache_large_files == false && chunk >= cache_size_max ) {\n     msg.payload.properties.cache = false ;\n}\n\nif ( embed_data == true && chunk <= embed_size_max ) {\n    msg.payload.properties.content = { \"encoding\": \"utf-8\", \"value\": value, \"size\": chunk }\n}\n\nrandom = Math.random();\nif ( random <= 0.5 ) { \n    msg.payload.properties.datetime = msg.datetime;\n}\nelse {\n    msg.payload.properties.start_datetime = msg.start_datetime;\n    msg.payload.properties.end_datetime = msg.end_datetime;\n}\n\nrandom = Math.random();\n\nif ( random <= 0.33 ) { \n    msg.payload.geometry = null\n}\nelse if ( random <= 0.66 ) {\n    msg.payload.geometry = { \n              \"type\": \"Point\",\n              \"coordinates\": [\n                  lon1,\n                  lat1\n              ]\n    }\n}\nelse {\n    msg.payload.geometry = { \n              \"type\": \"Polygon\",\n              \"coordinates\" : [\n                  [\n                      [Math.min(lon1,lon2), Math.min(lat1,lat2)],\n                      [Math.min(lon1,lon2), Math.max(lat1,lat2)],\n                      [Math.max(lon1,lon2), Math.max(lat1,lat2)],\n                      [Math.max(lon1,lon2), Math.min(lat1,lat2)],\n                      [Math.min(lon1,lon2), Math.min(lat1,lat2)]\n                  ]\n              ]\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 440,
        "wires": [
            [
                "64497ada297a8048",
                "7d0c0921767ea0a6",
                "0858ce4dc8df6390"
            ]
        ]
    },
    {
        "id": "298341c8881ea656",
        "type": "file",
        "z": "fcc41b6aa5346b0b",
        "name": "Save",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "40c8b042eac18329",
                "c3b93d9910ac388e"
            ]
        ]
    },
    {
        "id": "0858ce4dc8df6390",
        "type": "mqtt out",
        "z": "fcc41b6aa5346b0b",
        "name": "Publish",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8cf5f6b5.937088",
        "x": 680,
        "y": 460,
        "wires": []
    },
    {
        "id": "c3b93d9910ac388e",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "K,V",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[filename,pubtime,\"EX\",$globalContext(\"store_duration\")]",
                "tot": "jsonata"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 380,
        "wires": [
            [
                "1f6ee2a4497c9499"
            ]
        ]
    },
    {
        "id": "1f6ee2a4497c9499",
        "type": "redis-command",
        "z": "fcc41b6aa5346b0b",
        "server": "44959fc60800e3f1",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 650,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9a838ba8ba803a06",
        "type": "flogger",
        "z": "fcc41b6aa5346b0b",
        "name": "Publish",
        "logfile": "datagen.log",
        "inputchoice": "object",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "a93c45df39215989",
        "sendpane": false,
        "x": 800,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7d0c0921767ea0a6",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Log",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"topic\": topic,\t   \"data_id\": payload.properties.data_id,\t   \"file\": filename,\t   \"length\":  payload.links.length \t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 420,
        "wires": [
            [
                "9a838ba8ba803a06"
            ]
        ]
    },
    {
        "id": "9985ab93515b2e2d",
        "type": "link out",
        "z": "fcc41b6aa5346b0b",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "39be0c7a8db3bbca"
        ],
        "x": 825,
        "y": 300,
        "wires": []
    },
    {
        "id": "39be0c7a8db3bbca",
        "type": "link in",
        "z": "fcc41b6aa5346b0b",
        "name": "link in 9",
        "links": [
            "9985ab93515b2e2d"
        ],
        "x": 305,
        "y": 440,
        "wires": [
            [
                "298341c8881ea656"
            ]
        ]
    },
    {
        "id": "54695c38b09f3c92",
        "type": "catch",
        "z": "fcc41b6aa5346b0b",
        "name": "",
        "scope": [
            "0daa3e39533f4653"
        ],
        "uncaught": false,
        "x": 370,
        "y": 220,
        "wires": [
            [
                "2d98292388a0388c"
            ]
        ]
    },
    {
        "id": "7ba9a6b6ce121019",
        "type": "mqtt out",
        "z": "fcc41b6aa5346b0b",
        "name": "Ack",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6b724b3e458a437c",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "6b41b82936cd3a2b",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"result/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/datagen\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 100,
        "wires": [
            [
                "7ba9a6b6ce121019"
            ]
        ]
    },
    {
        "id": "f7427101eaecb8ea",
        "type": "switch",
        "z": "fcc41b6aa5346b0b",
        "name": "Duration ?",
        "property": "timeout",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 120,
        "wires": [
            [
                "a0b29af9a5ebc24c"
            ]
        ]
    },
    {
        "id": "a0b29af9a5ebc24c",
        "type": "change",
        "z": "fcc41b6aa5346b0b",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "$flowContext(\"timeout\") * 1000",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 120,
        "wires": [
            [
                "24ae04445f2c6717"
            ]
        ]
    },
    {
        "id": "24ae04445f2c6717",
        "type": "trigger",
        "z": "fcc41b6aa5346b0b",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "6",
        "extend": false,
        "overrideDelay": true,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1155,
        "y": 120,
        "wires": [
            [
                "0ae68eb8cf214e9b"
            ]
        ],
        "l": false
    },
    {
        "id": "0ae68eb8cf214e9b",
        "type": "link out",
        "z": "fcc41b6aa5346b0b",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "12f91777fd626d0e",
            "d7ffbf9c555f1849"
        ],
        "x": 1205,
        "y": 120,
        "wires": []
    },
    {
        "id": "d7ffbf9c555f1849",
        "type": "link in",
        "z": "fcc41b6aa5346b0b",
        "name": "link in 27",
        "links": [
            "0ae68eb8cf214e9b"
        ],
        "x": 545,
        "y": 240,
        "wires": [
            [
                "2d98292388a0388c"
            ]
        ]
    },
    {
        "id": "98be10d6fc587b55",
        "type": "semaphore-plus-take",
        "z": "0528d79810dd92da",
        "name": "Take",
        "timeout": 0,
        "config": "994cdc4109176708",
        "avoidance": "never",
        "threshold": 5,
        "msgPart": "smp_avoidQueue",
        "partType": "msg",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "8063a1c2ecca3f67"
            ],
            []
        ]
    },
    {
        "id": "4ce4c41c09bae760",
        "type": "semaphore-plus-release",
        "z": "0528d79810dd92da",
        "name": "Release",
        "config": "994cdc4109176708",
        "x": 540,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ccee77f1edf6a50c",
        "type": "change",
        "z": "0528d79810dd92da",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "$flowContext(\"delay\") * ( $random() + 0.5 )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "03151e544a34a2b0"
            ]
        ]
    },
    {
        "id": "03151e544a34a2b0",
        "type": "trigger",
        "z": "0528d79810dd92da",
        "name": "Trigger",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 770,
        "y": 340,
        "wires": [
            [
                "bbe71032dd812d50"
            ]
        ]
    },
    {
        "id": "474d3a9744802bf3",
        "type": "switch",
        "z": "0528d79810dd92da",
        "name": "Loop ?",
        "property": "loop",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "number",
                "vt": "flow"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 400,
        "y": 360,
        "wires": [
            [
                "6fe6d0cb6f271365"
            ],
            [
                "4ce4c41c09bae760"
            ]
        ]
    },
    {
        "id": "6fe6d0cb6f271365",
        "type": "change",
        "z": "0528d79810dd92da",
        "name": "Loop",
        "rules": [
            {
                "t": "set",
                "p": "loop",
                "pt": "flow",
                "to": "$flowContext(\"loop\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "ccee77f1edf6a50c"
            ]
        ]
    },
    {
        "id": "8063a1c2ecca3f67",
        "type": "function",
        "z": "0528d79810dd92da",
        "name": "Override",
        "func": "let payload = msg.payload;\n\nlet number, loop, delay, integrity, id, conformsTo, type, geometry, value, method;\nlet data_id, pubtime, links, start_datetime, end_datetime, datetime, href, rel, properties, topic;\n\nif ( payload.configuration  && payload.configuration.setup ) {\n   number = payload.configuration.setup.number;\n   delay = payload.configuration.setup.delay;\n   topic = payload.configuration.setup.topic;\n}\n\nflow.set(\"number\", number || 1);\nflow.set(\"delay\", delay || global.get(\"delay\") )\nflow.set(\"topic\", topic !== undefined ? topic : null )\nflow.set(\"loop\",1);\n\nif (payload.configuration.wnm) {\n    id = payload.configuration.wnm.id;\n    if ( typeof payload.configuration.wnm.conformsTo != \"undefined\" ) conformsTo = payload.configuration.wnm.conformsTo[0];\n    type = payload.configuration.wnm.type;\n    geometry = payload.configuration.wnm.geometry;\n\n    if ( payload.configuration.wnm.properties ) {\n        data_id = payload.configuration.wnm.properties.data_id;\n        pubtime = payload.configuration.wnm.properties.pubtime;\n        start_datetime = payload.configuration.wnm.properties.start_datetime;\n        end_datetime = payload.configuration.wnm.properties.end_datetime;\n        datetime = payload.configuration.wnm.properties.datetime;        \n        if (payload.configuration.wnm.properties.integrity) {\n            method = payload.configuration.wnm.properties.integrity.method;\n            value = payload.configuration.wnm.properties.integrity.value;\n        }\n    }    \n    if ( payload.configuration.wnm.links ) {\n        href = payload.configuration.wnm.links[0].href;\n        rel = payload.configuration.wnm.links[0].rel;\n    }\n}\n \nflow.set(\"data_id\", data_id !== undefined ? data_id : null );\nflow.set(\"pubtime\", pubtime !== undefined ? pubtime : null );\nflow.set(\"id\", id !== undefined ? id : null);\nflow.set(\"geometry\", geometry !== undefined ? geometry : null);\nflow.set(\"conformsTo\", conformsTo !== undefined ? conformsTo : null);\nflow.set(\"type\", type !== undefined ? type : null);\nflow.set(\"start_datetime\", start_datetime !== undefined ? start_datetime : null);\nflow.set(\"end_datetime\", end_datetime !== undefined ? end_datetime : null);\nflow.set(\"datetime\", datetime !== undefined ? datetime : null);\nflow.set(\"method\", method !== undefined ? method : null);\nflow.set(\"value\", value !== undefined ? value : null);\nflow.set(\"href\", href !== undefined ? href : null);\nflow.set(\"rel\", rel !== undefined ? rel : null);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 120,
        "wires": [
            [
                "bf78825383df0370",
                "b35738b7bcce9586"
            ]
        ]
    },
    {
        "id": "cddc549d092886bc",
        "type": "link in",
        "z": "0528d79810dd92da",
        "name": "link in 15",
        "links": [
            "1f44f5ebf047e951"
        ],
        "x": 385,
        "y": 120,
        "wires": [
            [
                "98be10d6fc587b55"
            ]
        ]
    },
    {
        "id": "bf78825383df0370",
        "type": "link out",
        "z": "0528d79810dd92da",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "792b25592decedce"
        ],
        "x": 705,
        "y": 120,
        "wires": []
    },
    {
        "id": "792b25592decedce",
        "type": "link in",
        "z": "0528d79810dd92da",
        "name": "link in 16",
        "links": [
            "bf78825383df0370",
            "bbe71032dd812d50"
        ],
        "x": 265,
        "y": 220,
        "wires": [
            [
                "7adaf95cd617a533"
            ]
        ]
    },
    {
        "id": "7adaf95cd617a533",
        "type": "createrandom",
        "z": "0528d79810dd92da",
        "generator": "UUID",
        "type_generator": "generator",
        "label": "UUID",
        "param_1": "v4",
        "type_param_1": "Version",
        "param_2": "",
        "type_param_2": "msg",
        "param_3": "",
        "type_param_3": "msg",
        "f_use_debug": false,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "cb387984e64ec02e"
            ]
        ]
    },
    {
        "id": "cb387984e64ec02e",
        "type": "change",
        "z": "0528d79810dd92da",
        "name": "WNM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \t    \"id\": payload,\t    \"conformsTo\": [\t        \"http://wis.wmo.int/spec/wnm/1/conf/core\"\t    ],\t    \"type\": \"Feature\",\t    \"geometry\": null,\t    \"properties\": {\t            \"pubtime\": $fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z'),\t            \"integrity\": {\t                \"method\": \"sha512\",\t                \"value\": \"this_is_a_random_hash\"\t            },\t            \"data_id\": \"this_is_a_random_data_id\",\t            \"datetime\": $fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z')\t    },\t    \"links\": [  {\t            \"href\": \"https://www.example.org/random\",\t            \"rel\": \"canonical\"\t    }   ]\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.id",
                "pt": "msg",
                "to": "$flowContext(\"id\") != null ? $flowContext(\"id\") : payload.id ",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.conformsTo[0]",
                "pt": "msg",
                "to": "$flowContext(\"conformsTo\") != null ? $flowContext(\"conformsTo\") : payload.conformsTo[0]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.type",
                "pt": "msg",
                "to": "$flowContext(\"type\") != null ? $flowContext(\"type\") : payload.type",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.geometry",
                "pt": "msg",
                "to": "$flowContext(\"geometry\") != null ? $flowContext(\"geometry\") : payload.geometry",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.pubtime",
                "pt": "msg",
                "to": "$flowContext(\"pubtime\") != null ? $flowContext(\"pubtime\") : payload.properties.pubtime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.datetime",
                "pt": "msg",
                "to": "$flowContext(\"datetime\") != null ? $flowContext(\"datetime\") : payload.properties.datetime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.start_datetime",
                "pt": "msg",
                "to": "$flowContext(\"start_datetime\") != null ? $flowContext(\"start_datetime\") : payload.properties.start_datetime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.integrity.method",
                "pt": "msg",
                "to": "$flowContext(\"method\") != null ? $flowContext(\"method\") : payload.properties.integrity.method",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.integrity.value",
                "pt": "msg",
                "to": "$flowContext(\"value\") != null ? $flowContext(\"value\") : payload.properties.integrity.value",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.end_datetime",
                "pt": "msg",
                "to": "$flowContext(\"end_datetime\") != null ? $flowContext(\"end_datetime\") : payload.properties.end_datetime",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.properties.data_id",
                "pt": "msg",
                "to": "$flowContext(\"data_id\") != null ? $flowContext(\"data_id\") : payload.properties.data_id",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.links[0].href",
                "pt": "msg",
                "to": "$flowContext(\"href\") != null ? $flowContext(\"href\") : payload.links[0].href",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.links[0].rel",
                "pt": "msg",
                "to": "$flowContext(\"rel\") != null ? $flowContext(\"rel\") : payload.links[0].rel",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.id = false ? **.payload ~> |$|{}, ['id']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties.pubtime = false ? **.payload ~> |$.properties|{}, ['pubtime']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties.datetime = false ? **.payload ~> |$.properties|{}, ['datetime']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.type = false ? **.payload ~> |$|{}, ['type']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.geometry = false ? **.payload ~> |$|{}, ['geometry']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties.data_id = false ? **.payload ~> |$.properties|{}, ['data_id']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.conformsTo[0] = false ? **.payload ~> |$|{}, ['conformsTo']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.links.href = false ? **.payload ~> |$.links|{}, ['href']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.links.rel = false ? **.payload ~> |$.links|{}, ['rel']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties.integrity.method = false ? **.payload ~> |$.properties.integrity|{}, ['method']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties.integrity.value = false ? **.payload ~> |$.properties.integrity|{}, ['value']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties.integrity = {} ? **.payload ~> |$.properties|{}, ['integrity']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.properties = {} ? **.payload ~> |$|{}, ['properties']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.links[0] = {} ? **.payload ~> |$|{}, ['links']|: payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$flowContext(\"topic\") != null ? $flowContext(\"topic\") : \"origin/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/data/core/weather/surface-based-observations/synop\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "6a39a6330d9adc5b",
                "36ba9df86ca5cb92",
                "729e0cc730dc45d6"
            ]
        ]
    },
    {
        "id": "6a39a6330d9adc5b",
        "type": "mqtt out",
        "z": "0528d79810dd92da",
        "name": "Pub",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8cf5f6b5.937088",
        "x": 610,
        "y": 200,
        "wires": []
    },
    {
        "id": "36ba9df86ca5cb92",
        "type": "link out",
        "z": "0528d79810dd92da",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "de4109cd72fa92b1"
        ],
        "x": 575,
        "y": 240,
        "wires": []
    },
    {
        "id": "de4109cd72fa92b1",
        "type": "link in",
        "z": "0528d79810dd92da",
        "name": "link in 17",
        "links": [
            "36ba9df86ca5cb92"
        ],
        "x": 305,
        "y": 360,
        "wires": [
            [
                "474d3a9744802bf3"
            ]
        ]
    },
    {
        "id": "bbe71032dd812d50",
        "type": "link out",
        "z": "0528d79810dd92da",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "792b25592decedce"
        ],
        "x": 855,
        "y": 340,
        "wires": []
    },
    {
        "id": "68b4c9ed6cc214f3",
        "type": "flogger",
        "z": "0528d79810dd92da",
        "name": "Publish",
        "logfile": "wnmtest.log",
        "inputchoice": "object",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "a93c45df39215989",
        "sendpane": false,
        "x": 740,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "729e0cc730dc45d6",
        "type": "change",
        "z": "0528d79810dd92da",
        "name": "Log",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "68b4c9ed6cc214f3"
            ]
        ]
    },
    {
        "id": "6c2fff8bbb927f77",
        "type": "catch",
        "z": "0528d79810dd92da",
        "name": "",
        "scope": [
            "8063a1c2ecca3f67"
        ],
        "uncaught": false,
        "x": 410,
        "y": 400,
        "wires": [
            [
                "4ce4c41c09bae760"
            ]
        ]
    },
    {
        "id": "51559a099ea7478e",
        "type": "mqtt out",
        "z": "0528d79810dd92da",
        "name": "Ack",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6b724b3e458a437c",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "b35738b7bcce9586",
        "type": "change",
        "z": "0528d79810dd92da",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"result/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/wnmtest\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 60,
        "wires": [
            [
                "51559a099ea7478e"
            ]
        ]
    },
    {
        "id": "6463e038858fab43",
        "type": "function",
        "z": "7a284d91c976432b",
        "name": "Override",
        "func": "let payload = msg.payload;\n\nlet delay, action, timeout;\n\nif ( payload.configuration  && payload.configuration.setup ) {\n   delay = payload.configuration.setup.delay;\n   action = payload.configuration.setup.action;\n   timeout = payload.configuration.setup.timeout;\n}\n\nflow.set(\"delay\", delay || global.get(\"delay\") );\nflow.set(\"action\", action || \"stop\");\nflow.set(\"timeout\", timeout || 0);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "423d8996c3908f58",
                "3a5b2756bb95546e"
            ]
        ]
    },
    {
        "id": "423d8996c3908f58",
        "type": "switch",
        "z": "7a284d91c976432b",
        "name": "Action ?",
        "property": "action",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "8c1c1a406e7d6106"
            ],
            [
                "1e256b5517221fea"
            ]
        ]
    },
    {
        "id": "8c1c1a406e7d6106",
        "type": "switch",
        "z": "7a284d91c976432b",
        "name": "Status ?",
        "property": "status_wnm",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "d62ab76bf311cc80"
            ],
            [
                "d62ab76bf311cc80"
            ]
        ]
    },
    {
        "id": "d62ab76bf311cc80",
        "type": "change",
        "z": "7a284d91c976432b",
        "name": "Start",
        "rules": [
            {
                "t": "set",
                "p": "status_wnm",
                "pt": "global",
                "to": "start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 120,
        "wires": [
            [
                "81e4756d3692cefc",
                "2ba47ba5b1b17a3e"
            ]
        ]
    },
    {
        "id": "1e256b5517221fea",
        "type": "change",
        "z": "7a284d91c976432b",
        "name": "Stop",
        "rules": [
            {
                "t": "set",
                "p": "status_wnm",
                "pt": "global",
                "to": "stop",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0ad2b72c10aa712e",
        "type": "switch",
        "z": "7a284d91c976432b",
        "name": "Action ?",
        "property": "action",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 420,
        "wires": [
            [
                "4120753db93115b4"
            ],
            []
        ]
    },
    {
        "id": "4120753db93115b4",
        "type": "change",
        "z": "7a284d91c976432b",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "$flowContext(\"delay\") * ( $random() + 0.5 )",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 420,
        "wires": [
            [
                "3a3468d89bcf8b77"
            ]
        ]
    },
    {
        "id": "3a3468d89bcf8b77",
        "type": "trigger",
        "z": "7a284d91c976432b",
        "name": "Trigger",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": true,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 630,
        "y": 420,
        "wires": [
            [
                "1646936f9a99d1f8"
            ]
        ]
    },
    {
        "id": "dbc1960b8b403a38",
        "type": "change",
        "z": "7a284d91c976432b",
        "name": "WNM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \t    \"id\": payload,\t    \"conformsTo\": [\t        \"http://wis.wmo.int/spec/wnm/1/conf/core\"\t    ],\t    \"type\": \"Feature\",\t    \"geometry\": null,\t    \"properties\": {\t            \"pubtime\": $fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z'),\t            \"integrity\": {\t                \"method\": \"sha512\",\t                \"value\": \"this_is_a_random_hash\"\t            },\t            \"data_id\": \"this_is_a_random_data_id\",\t            \"datetime\": $fromMillis($millis(),'[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01].[f003]Z')\t    },\t    \"links\": [  {\t            \"href\": \"https://www.example.org/random\",\t            \"rel\": \"canonical\"\t    }   ]\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"origin/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/weather/experimental\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 300,
        "wires": [
            [
                "4ef8419be40ed93a",
                "309aabd1580176fb",
                "9ec6d973cebc5d0a"
            ]
        ]
    },
    {
        "id": "c5165ef052fca09c",
        "type": "createrandom",
        "z": "7a284d91c976432b",
        "generator": "UUID",
        "type_generator": "generator",
        "label": "UUID",
        "param_1": "v4",
        "type_param_1": "Version",
        "param_2": "",
        "type_param_2": "msg",
        "param_3": "",
        "type_param_3": "msg",
        "f_use_debug": false,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "dbc1960b8b403a38"
            ]
        ]
    },
    {
        "id": "4ef8419be40ed93a",
        "type": "mqtt out",
        "z": "7a284d91c976432b",
        "name": "Pub",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8cf5f6b5.937088",
        "x": 650,
        "y": 280,
        "wires": []
    },
    {
        "id": "309aabd1580176fb",
        "type": "link out",
        "z": "7a284d91c976432b",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "207e36a4193f7952"
        ],
        "x": 605,
        "y": 320,
        "wires": []
    },
    {
        "id": "207e36a4193f7952",
        "type": "link in",
        "z": "7a284d91c976432b",
        "name": "link in 12",
        "links": [
            "309aabd1580176fb"
        ],
        "x": 285,
        "y": 420,
        "wires": [
            [
                "0ad2b72c10aa712e"
            ]
        ]
    },
    {
        "id": "2645428b040d9fc2",
        "type": "link in",
        "z": "7a284d91c976432b",
        "name": "link in 13",
        "links": [
            "1646936f9a99d1f8",
            "81e4756d3692cefc"
        ],
        "x": 305,
        "y": 300,
        "wires": [
            [
                "c5165ef052fca09c"
            ]
        ]
    },
    {
        "id": "1646936f9a99d1f8",
        "type": "link out",
        "z": "7a284d91c976432b",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "2645428b040d9fc2"
        ],
        "x": 715,
        "y": 420,
        "wires": []
    },
    {
        "id": "81e4756d3692cefc",
        "type": "link out",
        "z": "7a284d91c976432b",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "2645428b040d9fc2"
        ],
        "x": 815,
        "y": 120,
        "wires": []
    },
    {
        "id": "8e3473c56e63770b",
        "type": "link in",
        "z": "7a284d91c976432b",
        "name": "link in 14",
        "links": [
            "b1fee82a3f2e01ab"
        ],
        "x": 205,
        "y": 140,
        "wires": [
            [
                "6463e038858fab43"
            ]
        ]
    },
    {
        "id": "a1f17e209edef3bb",
        "type": "flogger",
        "z": "7a284d91c976432b",
        "name": "Publish",
        "logfile": "wnmgen.log",
        "inputchoice": "object",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "a93c45df39215989",
        "sendpane": false,
        "x": 780,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "9ec6d973cebc5d0a",
        "type": "change",
        "z": "7a284d91c976432b",
        "name": "Log",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "a1f17e209edef3bb"
            ]
        ]
    },
    {
        "id": "3267d4708b2d5591",
        "type": "catch",
        "z": "7a284d91c976432b",
        "name": "",
        "scope": [
            "6463e038858fab43"
        ],
        "uncaught": false,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "1e256b5517221fea"
            ]
        ]
    },
    {
        "id": "61582a3d9e1127b8",
        "type": "mqtt out",
        "z": "7a284d91c976432b",
        "name": "Ack",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6b724b3e458a437c",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "3a5b2756bb95546e",
        "type": "change",
        "z": "7a284d91c976432b",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"result/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/wnmgen\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "61582a3d9e1127b8"
            ]
        ]
    },
    {
        "id": "2ba47ba5b1b17a3e",
        "type": "switch",
        "z": "7a284d91c976432b",
        "name": "Duration ?",
        "property": "timeout",
        "propertyType": "flow",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 870,
        "y": 80,
        "wires": [
            [
                "cef43368bb4899d4"
            ]
        ]
    },
    {
        "id": "cef43368bb4899d4",
        "type": "change",
        "z": "7a284d91c976432b",
        "name": "Delay",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "$flowContext(\"timeout\") * 1000",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "4841e399aaecfed1"
            ]
        ]
    },
    {
        "id": "4841e399aaecfed1",
        "type": "trigger",
        "z": "7a284d91c976432b",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "6",
        "extend": false,
        "overrideDelay": true,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1095,
        "y": 80,
        "wires": [
            [
                "7dd8b47b2966f9ea"
            ]
        ],
        "l": false
    },
    {
        "id": "7dd8b47b2966f9ea",
        "type": "link out",
        "z": "7a284d91c976432b",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "12f91777fd626d0e",
            "f79ad1a1ea144a03"
        ],
        "x": 1145,
        "y": 80,
        "wires": []
    },
    {
        "id": "f79ad1a1ea144a03",
        "type": "link in",
        "z": "7a284d91c976432b",
        "name": "link in 28",
        "links": [
            "7dd8b47b2966f9ea"
        ],
        "x": 475,
        "y": 200,
        "wires": [
            [
                "1e256b5517221fea"
            ]
        ]
    },
    {
        "id": "039ae0c14e1d3031",
        "type": "link in",
        "z": "08fa4324bb7d6a58",
        "name": "link in 29",
        "links": [
            "570cd7fa5134ccb0"
        ],
        "x": 305,
        "y": 260,
        "wires": [
            [
                "4ba6784944bdb6f4"
            ]
        ]
    },
    {
        "id": "4ba6784944bdb6f4",
        "type": "semaphore-plus-take",
        "z": "08fa4324bb7d6a58",
        "name": "Take",
        "timeout": 0,
        "config": "0e9de28723f237e9",
        "avoidance": "never",
        "threshold": 5,
        "msgPart": "smp_avoidQueue",
        "partType": "msg",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "e94d5c7a6bd9b82f"
            ],
            []
        ]
    },
    {
        "id": "3c64c018bc012c21",
        "type": "semaphore-plus-release",
        "z": "08fa4324bb7d6a58",
        "name": "Release",
        "config": "0e9de28723f237e9",
        "x": 1140,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "56051c265fd7b9a3",
        "type": "switch",
        "z": "08fa4324bb7d6a58",
        "name": "id or min/max",
        "property": "payload.configuration.setup",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "centreid",
                "vt": "str"
            },
            {
                "t": "jsonata_exp",
                "v": "$number(\t   payload.configuration.setup.centreid_min\t) <= $number(\t   payload.configuration.setup.centreid_max\t) and $number(\t   payload.configuration.setup.centreid_min\t) >= 10000 and $number(\t   payload.configuration.setup.centreid_max\t) <= 11000",
                "vt": "jsonata"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 420,
        "wires": [
            [
                "9f1b33ec5aeeb96b"
            ],
            [
                "0e6dde67386af8f9"
            ]
        ]
    },
    {
        "id": "7f34bba1f4c4c4af",
        "type": "catch",
        "z": "08fa4324bb7d6a58",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 980,
        "y": 620,
        "wires": [
            [
                "3c64c018bc012c21"
            ]
        ]
    },
    {
        "id": "9f1b33ec5aeeb96b",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "centreid",
                "pt": "msg",
                "to": "payload.configuration.setup.centreid",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "metrics",
                "pt": "msg",
                "to": "payload.configuration.setup.metrics",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "e689339503a11b17"
            ]
        ]
    },
    {
        "id": "e689339503a11b17",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Set 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"op\":$flowContext(\"op\"),\t   \"labels\":{\t      \"centre_id\": \"io-wis2dev-\" & centreid & \"-test\",\t      \"report_by\": \"io-wis2dev-\" & $globalContext(\"centreidnumber\") & $flowContext(\"gs\")\t   },\t   \"val\": payload.configuration.setup.value\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "bfb62d2246bf26a4"
            ]
        ]
    },
    {
        "id": "0e6dde67386af8f9",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "min",
                "pt": "msg",
                "to": "payload.configuration.setup.centreid_min",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "max",
                "pt": "msg",
                "to": "payload.configuration.setup.centreid_max",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "metrics",
                "pt": "msg",
                "to": "payload.configuration.setup.metrics",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "value",
                "pt": "msg",
                "to": "payload.configuration.setup.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 460,
        "wires": [
            [
                "c0f4085dfddd50e8"
            ]
        ]
    },
    {
        "id": "c0f4085dfddd50e8",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Set 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"op\":$flowContext (\"op\"),\t   \"labels\":{\t      \"centre_id\": \"io-wis2dev-\" & min & \"-test\",\t      \"report_by\": \"io-wis2dev-\" & $globalContext(\"centreidnumber\") & $flowContext(\"gs\")\t   },\t   \"val\": value\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 460,
        "wires": [
            [
                "8386f67bd188d4af",
                "bfb62d2246bf26a4"
            ]
        ]
    },
    {
        "id": "8386f67bd188d4af",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Min++",
        "rules": [
            {
                "t": "set",
                "p": "min",
                "pt": "msg",
                "to": "min + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 460,
        "wires": [
            [
                "d39056a5f23432f2"
            ]
        ]
    },
    {
        "id": "d39056a5f23432f2",
        "type": "switch",
        "z": "08fa4324bb7d6a58",
        "name": "<= max",
        "property": "min",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "max",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1000,
        "y": 460,
        "wires": [
            [
                "1fb00674c71e8f10"
            ],
            [
                "37716adf9a7b7a2f"
            ]
        ]
    },
    {
        "id": "1fb00674c71e8f10",
        "type": "link out",
        "z": "08fa4324bb7d6a58",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "7e78f52a6ad909f2"
        ],
        "x": 1095,
        "y": 440,
        "wires": []
    },
    {
        "id": "7e78f52a6ad909f2",
        "type": "link in",
        "z": "08fa4324bb7d6a58",
        "name": "link in 30",
        "links": [
            "1fb00674c71e8f10"
        ],
        "x": 645,
        "y": 520,
        "wires": [
            [
                "c0f4085dfddd50e8"
            ]
        ]
    },
    {
        "id": "4b0d15625ee634ad",
        "type": "complete",
        "z": "08fa4324bb7d6a58",
        "name": "",
        "scope": [
            "37716adf9a7b7a2f",
            "e689339503a11b17"
        ],
        "uncaught": false,
        "x": 990,
        "y": 680,
        "wires": [
            [
                "3c64c018bc012c21"
            ]
        ]
    },
    {
        "id": "37716adf9a7b7a2f",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Done",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "da118528da50236c",
        "type": "mqtt out",
        "z": "08fa4324bb7d6a58",
        "name": "Ack",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "6b724b3e458a437c",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "4bf67ba2957556bc",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Ack",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "\"result/a/wis2/io-wis2dev-\" & $globalContext(\"centreidnumber\") & \"-test/gmtest\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "da118528da50236c"
            ]
        ]
    },
    {
        "id": "de029b5918addfc0",
        "type": "complete",
        "z": "08fa4324bb7d6a58",
        "name": "",
        "scope": [
            "56051c265fd7b9a3"
        ],
        "uncaught": false,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "4bf67ba2957556bc"
            ]
        ]
    },
    {
        "id": "061468ea36fd11d9",
        "type": "switch",
        "z": "08fa4324bb7d6a58",
        "name": "Metrics ?",
        "property": "metrics",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "wmo_wis2_gb_connected_flag",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gb_messages_received_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gb_messages_published_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gb_messages_invalid_format_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gb_messages_invalid_topic_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gb_messages_no_metadata_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gb_last_message_timestamp_seconds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_downloaded_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_downloaded_errors_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_dataserver_status_flag",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_dataserver_last_download_timestamp_seconds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_no_cache_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_cache_override_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_integrity_failed_total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "wmo_wis2_gc_last_metadata_timestamp_seconds",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 380,
        "y": 1160,
        "wires": [
            [
                "abb8e07055ac2d65"
            ],
            [
                "6a86f7c541c35c77"
            ],
            [
                "2201b7506b5187c0"
            ],
            [
                "6a844cd49d4370d2"
            ],
            [
                "147aefa649605440"
            ],
            [
                "4f6ce100156594fa"
            ],
            [
                "7ffad71c2824747c"
            ],
            [
                "acbeb00cc14fc5dd"
            ],
            [
                "50019b1506f003c4"
            ],
            [
                "6fa6fb1c92d31f8d"
            ],
            [
                "61a19becbb4da0ef"
            ],
            [
                "ec10c30a77f006d6"
            ],
            [
                "5ec966041cade0ab"
            ],
            [
                "15183c602d1ca2ad"
            ],
            [
                "67c73616b01fe250"
            ]
        ]
    },
    {
        "id": "abb8e07055ac2d65",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "Flag",
        "metric": "85d82b4006d65d8d",
        "x": 630,
        "y": 740,
        "wires": []
    },
    {
        "id": "bfb62d2246bf26a4",
        "type": "link out",
        "z": "08fa4324bb7d6a58",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "ba86800f2b4f8384"
        ],
        "x": 835,
        "y": 380,
        "wires": []
    },
    {
        "id": "ba86800f2b4f8384",
        "type": "link in",
        "z": "08fa4324bb7d6a58",
        "name": "link in 31",
        "links": [
            "bfb62d2246bf26a4"
        ],
        "x": 285,
        "y": 1160,
        "wires": [
            [
                "061468ea36fd11d9"
            ]
        ]
    },
    {
        "id": "e94d5c7a6bd9b82f",
        "type": "switch",
        "z": "08fa4324bb7d6a58",
        "name": "GS ?",
        "property": "payload.scenario",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "gbmetrics",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gcmetrics",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gdcmetrics",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "f3b91f65cc3e056d"
            ],
            [
                "c2fa4ef1981482e4"
            ],
            [
                "57ef81b03aeef6cd"
            ]
        ]
    },
    {
        "id": "f3b91f65cc3e056d",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "GB",
        "rules": [
            {
                "t": "set",
                "p": "gs",
                "pt": "flow",
                "to": "-global-broker",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "1a5f791b3bf678c2"
            ]
        ]
    },
    {
        "id": "57ef81b03aeef6cd",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "GDC",
        "rules": [
            {
                "t": "set",
                "p": "gs",
                "pt": "flow",
                "to": "-global-discovery-catalogue",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 300,
        "wires": [
            [
                "1a5f791b3bf678c2"
            ]
        ]
    },
    {
        "id": "c2fa4ef1981482e4",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "GC",
        "rules": [
            {
                "t": "set",
                "p": "gs",
                "pt": "flow",
                "to": "-global-cache",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "1a5f791b3bf678c2"
            ]
        ]
    },
    {
        "id": "60aa3ae44d9aa957",
        "type": "link in",
        "z": "08fa4324bb7d6a58",
        "name": "link in 32",
        "links": [
            "c2fb076fe0fa4a59"
        ],
        "x": 305,
        "y": 420,
        "wires": [
            [
                "56051c265fd7b9a3"
            ]
        ]
    },
    {
        "id": "26749821103d1395",
        "type": "inject",
        "z": "08fa4324bb7d6a58",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 980,
        "y": 740,
        "wires": [
            [
                "3c64c018bc012c21"
            ]
        ]
    },
    {
        "id": "6a86f7c541c35c77",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "Received",
        "metric": "6c4610bb8eab7dae",
        "x": 640,
        "y": 780,
        "wires": []
    },
    {
        "id": "2201b7506b5187c0",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "Published",
        "metric": "91862f46380a18bf",
        "x": 640,
        "y": 820,
        "wires": []
    },
    {
        "id": "4f6ce100156594fa",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "No Metadata",
        "metric": "a25e33f65c381b8c",
        "x": 650,
        "y": 940,
        "wires": []
    },
    {
        "id": "147aefa649605440",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "Invalid Topic",
        "metric": "8646947da6c80e53",
        "x": 650,
        "y": 900,
        "wires": []
    },
    {
        "id": "6a844cd49d4370d2",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "Invalid Format",
        "metric": "6fb1561193d92df9",
        "x": 660,
        "y": 860,
        "wires": []
    },
    {
        "id": "7ffad71c2824747c",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "Last Message",
        "metric": "1b20016c7135f032",
        "x": 660,
        "y": 980,
        "wires": []
    },
    {
        "id": "1a5f791b3bf678c2",
        "type": "switch",
        "z": "08fa4324bb7d6a58",
        "name": "Set or Inc ?",
        "property": "payload.configuration.setup.metrics",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "wmo_wis2_gb_connected_flag|wmo_wis2_gb_last_message_timestamp_seconds",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "wmo_wis2_gc_dataserver_status_flag|wmo_wis2_gc_dataserver_last_download_timestamp_seconds",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 830,
        "y": 260,
        "wires": [
            [
                "50d03456d32b43d6"
            ],
            [
                "50d03456d32b43d6"
            ],
            [
                "c6edefdd70fe4528"
            ]
        ]
    },
    {
        "id": "50d03456d32b43d6",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Set",
        "rules": [
            {
                "t": "set",
                "p": "op",
                "pt": "flow",
                "to": "set",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 240,
        "wires": [
            [
                "c2fb076fe0fa4a59"
            ]
        ]
    },
    {
        "id": "c6edefdd70fe4528",
        "type": "change",
        "z": "08fa4324bb7d6a58",
        "name": "Inc",
        "rules": [
            {
                "t": "set",
                "p": "op",
                "pt": "flow",
                "to": "inc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 280,
        "wires": [
            [
                "c2fb076fe0fa4a59"
            ]
        ]
    },
    {
        "id": "c2fb076fe0fa4a59",
        "type": "link out",
        "z": "08fa4324bb7d6a58",
        "name": "link out 37",
        "mode": "link",
        "links": [
            "60aa3ae44d9aa957"
        ],
        "x": 1095,
        "y": 260,
        "wires": []
    },
    {
        "id": "5a2dea88b70aca39",
        "type": "comment",
        "z": "08fa4324bb7d6a58",
        "g": "d6751d2bb52095bf",
        "name": "GB Metrics",
        "info": "",
        "x": 630,
        "y": 680,
        "wires": []
    },
    {
        "id": "acbeb00cc14fc5dd",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "Downloaded",
        "metric": "203ef89ca66b82a2",
        "x": 650,
        "y": 1160,
        "wires": []
    },
    {
        "id": "50019b1506f003c4",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "Downloaded Errors",
        "metric": "34adf0271a148eb2",
        "x": 670,
        "y": 1200,
        "wires": []
    },
    {
        "id": "6fa6fb1c92d31f8d",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "Dataserver Flag",
        "metric": "232035f92af35a91",
        "x": 660,
        "y": 1240,
        "wires": []
    },
    {
        "id": "61a19becbb4da0ef",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "Dataserver Last",
        "metric": "bd27f28bfe4eef0e",
        "x": 660,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ec10c30a77f006d6",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "No Cache",
        "metric": "fcad0d9f95e40b12",
        "x": 640,
        "y": 1320,
        "wires": []
    },
    {
        "id": "5ec966041cade0ab",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "Cache Override",
        "metric": "33a318be978e043b",
        "x": 660,
        "y": 1360,
        "wires": []
    },
    {
        "id": "15183c602d1ca2ad",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "Integrity Failed",
        "metric": "eff6f062b536a5f9",
        "x": 660,
        "y": 1400,
        "wires": []
    },
    {
        "id": "67c73616b01fe250",
        "type": "prometheus-exporter",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "Last Metadata",
        "metric": "a9f64b39e68fafe1",
        "x": 660,
        "y": 1440,
        "wires": []
    },
    {
        "id": "df94d1608ff65e25",
        "type": "comment",
        "z": "08fa4324bb7d6a58",
        "g": "063a3659efcf29f4",
        "name": "GC Metrics",
        "info": "",
        "x": 630,
        "y": 1100,
        "wires": []
    }
]